(mf_pvs0_Recursion_Theorem
 (p_recursive2nat_TCC1 0
  (p_recursive2nat_TCC1-1 nil 3796745513 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (lmf_PVS0Expr type-eq-decl nil mf_pvs0_expr nil)
    (PVS0 type-eq-decl nil mf_pvs0_expr nil)
    (partial_recursive? const-decl "bool" mf_pvs0_computable nil)
    (partial_recursive type-eq-decl nil mf_pvs0_computable nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (valid_index_rec const-decl "bool" mf_pvs0_lang nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (list type-decl nil list_adt nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (limited const-decl "bool" mf_pvs0_computable nil))
   nil
   (p_recursive2nat subtype "mf_pvs0_Recursion_Theorem.pr`4"
    "(mf_pvs0_computable[mf_pvs0_basic_programs.false_val, mf_pvs0_basic_programs.lop1, mf_pvs0_basic_programs.lop2].limited)")))
 (greater_index_rec_TCC1 0
  (greater_index_rec_TCC1-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e)"
    "nil")))
 (greater_index_rec_TCC2 0
  (greater_index_rec_TCC2-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e1)"
    "nil")))
 (greater_index_rec_TCC3 0
  (greater_index_rec_TCC3-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e2)"
    "nil")))
 (greater_index_rec_TCC4 0
  (greater_index_rec_TCC4-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e1)"
    "nil")))
 (greater_index_rec_TCC5 0
  (greater_index_rec_TCC5-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e2)"
    "nil")))
 (greater_index_rec_TCC6 0
  (greater_index_rec_TCC6-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e3)"
    "nil")))
 (greater_index_rec_TCC7 0
  (greater_index_rec_TCC7-1 nil 3796745513
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(strict_well_founded?[mf_PVS0Expr])"
     mf_PVS0Expr_adt nil))
   nil
   (greater_index_rec termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec(mf_pvs0_Recursion_Theorem.e)"
    "nil")))
 (greater_index_rec_correctness 0
  (greater_index_rec_correctness-1 nil 3796745753
   ("" (induct "expr")
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil)
     ("4" (skeep*)
      (("4" (expand "subterm" -3)
        (("4" (prop)
          (("1" (expand "greater_index_rec" 1)
            (("1" (assert)
              (("1" (expand "max")
                (("1" (lift-if)
                  (("1" (prop)
                    (("1" (inst?) (("1" (assert) nil nil)) nil)
                     ("2" (inst?) (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "greater_index_rec" 1)
            (("2" (expand "max")
              (("2" (lift-if)
                (("2" (prop)
                  (("1" (inst? -4) (("1" (assert) nil nil)) nil)
                   ("2" (inst? -3) (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (skeep*)
      (("5" (expand "subterm" -2)
        (("5" (prop)
          (("1" (decompose-equality)
            (("1" (expand "greater_index_rec" 1)
              (("1" (expand "max")
                (("1" (lift-if)
                  (("1" (prop)
                    (("1" (assert) nil nil) ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "greater_index_rec" 1)
            (("2" (expand "max")
              (("2" (lift-if)
                (("2" (prop)
                  (("1" (inst?) (("1" (assert) nil nil)) nil)
                   ("2" (inst?) (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (skeep*)
      (("6" (expand "subterm" -4)
        (("6" (prop)
          (("1" (expand "greater_index_rec" 1)
            (("1" (expand "max")
              (("1" (lift-if)
                (("1" (lift-if)
                  (("1" (prop)
                    (("1" (inst?) (("1" (assert) nil nil)) nil)
                     ("2" (inst?) (("2" (assert) nil nil)) nil)
                     ("3" (inst?)
                      (("3" (assert)
                        (("3" (inst?)
                          (("3" (lift-if)
                            (("3" (prop) (("3" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (inst? -3)
            (("2" (assert)
              (("2" (expand "greater_index_rec" 1)
                (("2" (expand "max")
                  (("2" (lift-if)
                    (("2" (lift-if)
                      (("2" (lift-if)
                        (("2" (prop)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil)
                           ("3" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("3" (inst? -4)
            (("3" (expand "greater_index_rec" 1)
              (("3" (expand "max")
                (("3" (lift-if)
                  (("3" (lift-if)
                    (("3" (lift-if)
                      (("3" (prop)
                        (("1" (assert) nil nil) ("2" (assert) nil nil)
                         ("3" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (get_from_list adt-accessor-decl "[(rec?) -> nat]" mf_PVS0Expr_adt
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (op1? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (get_arg shared-adt-accessor-decl
     "[{x: mf_PVS0Expr | op1?(x) OR rec?(x)} -> mf_PVS0Expr]"
     mf_PVS0Expr_adt nil)
    (TRUE const-decl "bool" booleans nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (mf_PVS0Expr_induction formula-decl nil mf_PVS0Expr_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (greater_index_rec def-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (<= const-decl "bool" reals nil)
    (rec adt-constructor-decl "[[nat, mf_PVS0Expr] -> (rec?)]"
     mf_PVS0Expr_adt nil)
    (rec? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil))
   nil))
 (greater_index_rec_list_TCC1 0
  (greater_index_rec_list_TCC1-1 nil 3797082054
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil))
   nil
   (greater_index_rec_list subtype "mf_pvs0_Recursion_Theorem.l"
    "(list_adt[mf_PVS0Expr[nat]].cons?)")))
 (greater_index_rec_list_TCC2 0
  (greater_index_rec_list_TCC2-1 nil 3797082054
   ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (greater_index_rec_list termination
    "mf_pvs0_Recursion_Theorem.greater_index_rec_list(list_adt[mf_PVS0Expr[nat]].cdr(mf_pvs0_Recursion_Theorem.l))"
    "nil")))
 (greater_index_rec_list_correctness 0
  (greater_index_rec_list_correctness-1 nil 3797082147
   ("" (induct "l")
    (("1" (grind) nil nil)
     ("2" (skeep*)
      (("2" (expand "nth" -2)
        (("2" (lift-if)
          (("2" (prop)
            (("1" (expand "greater_index_rec_list" 1)
              (("1" (expand "max")
                (("1" (lift-if)
                  (("1" (prop)
                    (("1" (lemma "greater_index_rec_correctness")
                      (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
                     ("2" (lemma "greater_index_rec_correctness")
                      (("2" (inst?) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "greater_index_rec_list" 2)
              (("2" (expand "max")
                (("2" (lift-if)
                  (("2" (prop)
                    (("1" (inst?)
                      (("1" (assert) nil nil) ("2" (assert) nil nil))
                      nil)
                     ("2" (inst?)
                      (("1" (assert) nil nil) ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons1_var skolem-const-decl "mf_PVS0Expr[nat]"
     mf_pvs0_Recursion_Theorem nil)
    (cons2_var skolem-const-decl "list[mf_PVS0Expr[nat]]"
     mf_pvs0_Recursion_Theorem nil)
    (j skolem-const-decl "below[length(cons(cons1_var, cons2_var))]"
     mf_pvs0_Recursion_Theorem nil)
    (greater_index_rec_correctness formula-decl nil
     mf_pvs0_Recursion_Theorem nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (list_induction formula-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (greater_index_rec_list def-decl "nat" mf_pvs0_Recursion_Theorem
     nil)
    (<= const-decl "bool" reals nil) (nth def-decl "T" list_props nil)
    (rec adt-constructor-decl "[[nat, mf_PVS0Expr] -> (rec?)]"
     mf_PVS0Expr_adt nil)
    (rec? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (below type-eq-decl nil nat_types nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil))
   nil))
 (printA_TCC1 0
  (printA_TCC1-2 nil 3797084474 ("" (grind) nil nil)
   ((pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (sub const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (offset_rec def-decl "mf_PVS0Expr" mf_pvs0_lang nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (sub1 const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sum const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (length def-decl "nat" list_props nil)
    (append def-decl "list[T]" list_props nil)
    (mult const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil
   (printA subtype
    "mf_PVS0Expr_adt[numfield].op2(1, mf_PVS0Expr_adt[nat].cnst((number_fields.+)((number_fields.+)((number_fields.+)(1, mf_pvs0_Recursion_Theorem.len), mf_pvs0_Recursion_Theorem.len2), list_props[mf_PVS0Expr[nat]].length(mf_pvs0_basic_programs.mult`4))), mf_PVS0Expr_adt[nat].op2(1, mf_PVS0Expr_adt[nat].rec((number_fields.+)((number_fields.+)(list_props[mf_PVS0Expr[nat]].length(mf_pvs0_basic_programs.mult`4), mf_pvs0_Recursion_Theorem.len), 1), mf_PVS0Expr_adt[nat].vr), mf_PVS0Expr_adt[nat].op1(0, mf_PVS0Expr_adt[nat].rec(1, mf_PVS0Expr_adt[nat].op2(1, mf_PVS0Expr_adt[nat].cnst(5), mf_PVS0Expr_adt[nat].rec((number_fields.+)((number_fields.+)(list_props[mf_PVS0Expr[nat]].length(mf_pvs0_basic_programs.mult`4), mf_pvs0_Recursion_Theorem.len), 1), mf_PVS0Expr_adt[nat].vr))))))"
    "mf_PVS0Expr[nat]"))
  (printA_TCC1-1 nil 3797084108 ("" (subtype-tcc) nil nil) nil nil
   (printA subtype
    "mf_PVS0Expr_adt[numfield].op2(1, mf_PVS0Expr_adt[nat].cnst((number_fields.+)((number_fields.+)((number_fields.+)(1, mf_pvs0_Recursion_Theorem.len), mf_pvs0_Recursion_Theorem.len2), list_props[mf_PVS0Expr[nat]].length(mf_pvs0_basic_programs.mult`4))), mf_PVS0Expr_adt[nat].op2(1, mf_PVS0Expr_adt[nat].rec((number_fields.+)((number_fields.+)(list_props[mf_PVS0Expr[nat]].length(mf_pvs0_basic_programs.mult`4), mf_pvs0_Recursion_Theorem.len), 1), mf_PVS0Expr_adt[nat].vr), mf_PVS0Expr_adt[nat].op1(0, mf_PVS0Expr_adt[nat].rec(1, mf_PVS0Expr_adt[nat].op2(1, mf_PVS0Expr_adt[nat].cnst(5), mf_PVS0Expr_adt[nat].rec((number_fields.+)((number_fields.+)(list_props[mf_PVS0Expr[nat]].length(mf_pvs0_basic_programs.mult`4), mf_pvs0_Recursion_Theorem.len), 1), mf_PVS0Expr_adt[nat].vr))))))"
    "mf_PVS0Expr[nat]")))
 (map_offset_rec_appendn 0
  (map_offset_rec_appendn-1 nil 3797084685
   ("" (induct-and-simplify "len") nil nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (offset_rec def-decl "mf_PVS0Expr" mf_pvs0_lang nil)
    (^ def-decl "list[T]" more_list_props structures)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (vr? adt-recognizer-decl "[mf_PVS0Expr -> boolean]" mf_PVS0Expr_adt
     nil)
    (vr adt-constructor-decl "(vr?)" mf_PVS0Expr_adt nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (append def-decl "list[T]" list_props nil))
   nil))
 (print_correctness_TCC1 0
  (print_correctness_TCC1-2 nil 3797085030 ("" (grind) nil nil)
   ((pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (sub const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (offset_rec def-decl "mf_PVS0Expr" mf_pvs0_lang nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (sub1 const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sum const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (length def-decl "nat" list_props nil)
    (append def-decl "list[T]" list_props nil)
    (mult const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (printA const-decl "list[mf_PVS0Expr[nat]]"
     mf_pvs0_Recursion_Theorem nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil
   (print_correctness subtype
    "list_props[mf_PVS0Expr[nat]].append(mf_pvs0_Recursion_Theorem.printA(mf_pvs0_Recursion_Theorem.len, mf_pvs0_Recursion_Theorem.len2), (: mf_PVS0Expr_adt[nat].cnst(mf_pvs0_Recursion_Theorem.h) :))"
    "lmf_PVS0Expr[nat]"))
  (print_correctness_TCC1-1 nil 3797084861 ("" (subtype-tcc) nil nil)
   nil nil
   (print_correctness subtype
    "list_props[mf_PVS0Expr[nat]].append(mf_pvs0_Recursion_Theorem.printA(mf_pvs0_Recursion_Theorem.len, mf_pvs0_Recursion_Theorem.len2), (: mf_PVS0Expr_adt[nat].cnst(mf_pvs0_Recursion_Theorem.h) :))"
    "lmf_PVS0Expr[nat]")))
 (print_correctness 0
  (print_correctness-1 nil 3797084873
   ("" (skeep)
    (("" (expand "semantic_rel")
      (("" (expand "printA" 1 2)
        (("" (expand "append" 1 2)
          (("" (expand "nth")
            (("" (expand "semantic_rel_expr")
              ((""
                (inst 1 "1 + len2 + len + length(mult`4)"
                 "tuple2nat(h, 1 + 5 * h)")
                (("" (prop)
                  (("1" (expand "semantic_rel_expr")
                    (("1" (propax) nil nil)) nil)
                   ("2" (expand "semantic_rel_expr")
                    (("2" (inst 1 "h" "1 + 5 * h")
                      (("2" (prop)
                        (("1" (expand "semantic_rel_expr")
                          (("1" (inst 1 "i")
                            (("1" (prop)
                              (("1"
                                (expand "semantic_rel_expr")
                                (("1" (propax) nil nil))
                                nil)
                               ("2"
                                (expand "printA" 1 2)
                                (("2"
                                  (rewrite "nth_append")
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (expand "length" -1 2)
                                        (("1"
                                          (rewrite "length_append")
                                          (("1"
                                            (rewrite "length_appendn")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "nth" 1)
                                                (("1"
                                                  (rewrite
                                                   "nth_append")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (rewrite
                                                         "map_length")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (rewrite
                                                         "map_length")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (rewrite
                                                     "map_length")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (rewrite "length_append")
                                        (("2"
                                          (expand "printA" -1)
                                          (("2"
                                            (expand "length" -1 2)
                                            (("2"
                                              (expand "length" 2 2)
                                              (("2"
                                                (rewrite
                                                 "length_append")
                                                (("2"
                                                  (rewrite
                                                   "length_appendn")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (rewrite
                                                       "map_length")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "nth"
                                                           2)
                                                          (("2"
                                                            (expand
                                                             "semantic_rel_expr")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "printA" -1)
                                    (("2"
                                      (rewrite "length_append")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (rewrite "length_append")
                                (("3"
                                  (expand "printA")
                                  (("3"
                                    (expand "length" 1 2)
                                    (("3"
                                      (rewrite "length_append")
                                      (("3"
                                        (rewrite "length_appendn")
                                        (("3"
                                          (assert)
                                          (("3"
                                            (rewrite "map_length")
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "semantic_rel_expr")
                          (("2" (inst 1 "5* h")
                            (("2" (prop)
                              (("1"
                                (expand "semantic_rel_expr")
                                (("1"
                                  (inst 1 "tuple2nat(5,h)")
                                  (("1"
                                    (prop)
                                    (("1"
                                      (expand "semantic_rel_expr")
                                      (("1"
                                        (inst 1 "5" "h")
                                        (("1"
                                          (prop)
                                          (("1"
                                            (expand
                                             "semantic_rel_expr")
                                            (("1" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "semantic_rel_expr")
                                            (("2"
                                              (inst 1 "i")
                                              (("2"
                                                (prop)
                                                (("1"
                                                  (expand
                                                   "semantic_rel_expr")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "printA" 1 2)
                                                  (("2"
                                                    (expand
                                                     "append"
                                                     1
                                                     2)
                                                    (("2"
                                                      (expand "nth" 1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (rewrite
                                                           "nth_append")
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (rewrite
                                                                 "length_append")
                                                                (("1"
                                                                  (rewrite
                                                                   "length_appendn")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (rewrite
                                                                       "map_length")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (rewrite
                                                                 "length_append")
                                                                (("2"
                                                                  (rewrite
                                                                   "length_appendn")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (rewrite
                                                                       "map_length")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "nth")
                                                                          (("2"
                                                                            (expand
                                                                             "semantic_rel_expr")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             "length_append")
                                                            (("2"
                                                              (rewrite
                                                               "length_appendn")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (rewrite
                                                                   "map_length")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (rewrite
                                                   "length_append")
                                                  (("3"
                                                    (expand "printA")
                                                    (("3"
                                                      (expand
                                                       "length"
                                                       1
                                                       2)
                                                      (("3"
                                                        (rewrite
                                                         "length_append")
                                                        (("3"
                                                          (rewrite
                                                           "length_appendn")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (rewrite
                                                               "map_length")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "eval_op2")
                                            (("3"
                                              (expand "lop2")
                                              (("3"
                                                (expand "length")
                                                (("3"
                                                  (expand "length")
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (expand "nth")
                                                      (("3"
                                                        (expand "nth")
                                                        (("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "printA" 1 2)
                                      (("2"
                                        (expand "append" 1 2)
                                        (("2"
                                          (expand "nth")
                                          (("2"
                                            (rewrite "nth_append")
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (prop)
                                                (("1"
                                                  (rewrite
                                                   "nth_append")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (expand
                                                         "printA"
                                                         1)
                                                        (("1"
                                                          (lemma
                                                           "add_rec_list")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "false_val"
                                                             "nth(mult`4,0)"
                                                             "append(append[mf_PVS0Expr[nat]]
                                                                                                                                  (mult`4,
                                                                                                                                   (: vr :) ^ len), (: cnst(h) :))"
                                                             "(: op2
                                                                                                                    (1,
                                                                                                                     cnst(1 + len2 + len + length(mult`4)),
                                                                                                                     op2
                                                                                                                     (1,
                                                                                                                      rec(1 + length(mult`4) + len, vr),
                                                                                                                      op1
                                                                                                                      (0,
                                                                                                                       rec
                                                                                                                       (1,
                                                                                                                        op2
                                                                                                                        (1,
                                                                                                                         cnst(5),
                                                                                                                         rec
                                                                                                                         (1 + length(mult`4) + len,
                                                                                                                          vr)))))) :)"
                                                             "lop1"
                                                             "lop2"
                                                             " tuple2nat(5, h)"
                                                             "5 * h")
                                                            (("1"
                                                              (expand
                                                               "append"
                                                               -1
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "append"
                                                                 -1
                                                                 3)
                                                                (("1"
                                                                  (expand
                                                                   "length"
                                                                   -1
                                                                   4)
                                                                  (("1"
                                                                    (expand
                                                                     "length"
                                                                     -1
                                                                     4)
                                                                    (("1"
                                                                      (expand
                                                                       "length"
                                                                       -1
                                                                       4)
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1
                                                                         4)
                                                                        (("1"
                                                                          (expand
                                                                           "append"
                                                                           1
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "map_nth_rw")
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_append")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "map_append")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "map_offset_rec_appendn")
                                                                                  (("1"
                                                                                    (case
                                                                                     "map(offset_rec(1))((: cnst(h) :)) = (: cnst(h) :)")
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "append_assoc")
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "add_rec_list2")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "false_val"
                                                                                               "nth(mult`4,0)"
                                                                                               "mult`4"
                                                                                               "append((: vr :) ^ len, (: cnst(h) :))"
                                                                                               "lop1"
                                                                                               "lop2"
                                                                                               "tuple2nat(5,h)"
                                                                                               "5 * h")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "mult_correctness")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "(lop1, lop2, false_val, mult`4) = mult")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "semantic_rel")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "^")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (typepred
                                                                                                   "mult")
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "partial_recursive?")
                                                                                                    (("3"
                                                                                                      (prop)
                                                                                                      (("3"
                                                                                                        (inst
                                                                                                         -4
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("4"
                                                                                                  (typepred
                                                                                                   "mult")
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "partial_recursive?")
                                                                                                    (("4"
                                                                                                      (prop)
                                                                                                      (("4"
                                                                                                        (inst?)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (grind)
                                                              nil
                                                              nil)
                                                             ("3"
                                                              (hide-all-but
                                                               1)
                                                              (("3"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (rewrite
                                                         "length_append")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (grind) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "eval_op1")
                                (("2"
                                  (expand "lop1")
                                  (("2"
                                    (expand "length")
                                    (("2"
                                      (expand "length")
                                      (("2"
                                        (expand "length")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "nth")
                                            (("2"
                                              (expand "succ")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (expand "eval_op2")
                          (("3" (expand "lop2")
                            (("3" (expand "length")
                              (("3"
                                (expand "length")
                                (("3"
                                  (assert)
                                  (("3"
                                    (expand "nth")
                                    (("3"
                                      (expand "nth")
                                      (("3" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (expand "eval_op2")
                    (("3" (expand "lop2")
                      (("3" (expand "length" 1 2)
                        (("3" (expand "length" 1 2)
                          (("3" (assert)
                            (("3" (expand "nth")
                              (("3"
                                (expand "nth")
                                (("3" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((printA const-decl "list[mf_PVS0Expr[nat]]"
     mf_pvs0_Recursion_Theorem nil)
    (nth def-decl "T" list_props nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (length def-decl "nat" list_props nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (lmf_PVS0Expr type-eq-decl nil mf_pvs0_expr nil)
    (PVS0 type-eq-decl nil mf_pvs0_expr nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (partial_recursive? const-decl "bool" mf_pvs0_computable nil)
    (partial_recursive type-eq-decl nil mf_pvs0_computable nil)
    (mult const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (tuple2nat const-decl "nat" tuple2nat numbers)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (length_appendn formula-decl nil more_list_props structures)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (map_length formula-decl nil more_map_props nil)
    (length_append formula-decl nil list_props nil)
    (length_singleton formula-decl nil more_list_props structures)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (^ def-decl "list[T]" more_list_props structures)
    (offset_rec def-decl "mf_PVS0Expr" mf_pvs0_lang nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (op1 adt-constructor-decl "[[nat, mf_PVS0Expr] -> (op1?)]"
     mf_PVS0Expr_adt nil)
    (op1? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (vr adt-constructor-decl "(vr?)" mf_PVS0Expr_adt nil)
    (vr? adt-recognizer-decl "[mf_PVS0Expr -> boolean]" mf_PVS0Expr_adt
     nil)
    (rec adt-constructor-decl "[[nat, mf_PVS0Expr] -> (rec?)]"
     mf_PVS0Expr_adt nil)
    (rec? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (cnst adt-constructor-decl "[T -> (cnst?)]" mf_PVS0Expr_adt nil)
    (cnst? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (op2 adt-constructor-decl
     "[[nat, mf_PVS0Expr, mf_PVS0Expr] -> (op2?)]" mf_PVS0Expr_adt nil)
    (op2? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (nth_append formula-decl nil more_list_props structures)
    (eval_op1 const-decl "Val" mf_pvs0_expr nil)
    (succ const-decl "nat" mf_pvs0_basic_programs nil)
    (eval_op2 const-decl "Val" mf_pvs0_expr nil)
    (< const-decl "bool" reals nil)
    (len skolem-const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (h skolem-const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (below type-eq-decl nil nat_types nil)
    (below type-eq-decl nil naturalnumbers nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (add_rec_list2 formula-decl nil mf_pvs0_lang nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (mult_correctness formula-decl nil mf_pvs0_basic_programs nil)
    (pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (sub const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sub1 const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sum const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (valid_index_rec const-decl "bool" mf_pvs0_lang nil)
    (append_assoc formula-decl nil list_props nil)
    (TRUE const-decl "bool" booleans nil)
    (map_offset_rec_appendn formula-decl nil mf_pvs0_Recursion_Theorem
     nil)
    (map_append formula-decl nil map_append nil)
    (add_rec_list formula-decl nil mf_pvs0_lang nil)
    (semantic_rel_expr inductive-decl "bool" mf_pvs0_expr nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (append def-decl "list[T]" list_props nil)
    (semantic_rel const-decl "bool" mf_pvs0_lang nil))
   nil))
 (vr_subterm 0
  (vr_subterm-1 nil 3797085389
   ("" (induct "len")
    (("1" (grind) nil nil)
     ("2" (skeep*)
      (("2" (expand "^" -2)
        (("2" (rewrite "nth_append")
          (("1" (lift-if)
            (("1" (prop)
              (("1" (grind) nil nil)
               ("2" (inst?) (("2" (assert) nil nil)) nil))
              nil))
            nil)
           ("2" (typepred "j")
            (("2" (expand "^" -1)
              (("2" (rewrite "length_append") nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nth_append formula-decl nil more_list_props structures)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_singleton formula-decl nil more_list_props structures)
    (j skolem-const-decl "below[length((: vr :) ^ (1 + j_1))]"
     mf_pvs0_Recursion_Theorem nil)
    (j_1 skolem-const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (length_append formula-decl nil list_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (nth def-decl "T" list_props nil)
    (rec adt-constructor-decl "[[nat, mf_PVS0Expr] -> (rec?)]"
     mf_PVS0Expr_adt nil)
    (rec? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil nat_types nil)
    (vr adt-constructor-decl "(vr?)" mf_PVS0Expr_adt nil)
    (vr? adt-recognizer-decl "[mf_PVS0Expr -> boolean]" mf_PVS0Expr_adt
     nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (^ def-decl "list[T]" more_list_props structures)
    (length def-decl "nat" list_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (< const-decl "bool" reals nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil))
 (print_limited 0
  (print_limited-1 nil 3797085625
   ("" (skeep)
    (("" (expand "limited")
      (("" (skeep)
        (("" (typepred "i")
          (("" (rewrite "length_append")
            (("" (rewrite "nth_append")
              (("" (lift-if)
                (("" (prop)
                  (("1" (expand "printA")
                    (("1" (expand "length" -1 1)
                      (("1" (expand "length" -2 1)
                        (("1" (expand "length" 1 3)
                          (("1" (rewrite "length_append")
                            (("1" (rewrite "map_length")
                              (("1"
                                (rewrite "length_appendn")
                                (("1"
                                  (expand "nth")
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (expand "valid_index_rec")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand "subterm")
                                            (("1"
                                              (expand "subterm")
                                              (("1"
                                                (expand "subterm")
                                                (("1"
                                                  (expand "subterm")
                                                  (("1"
                                                    (expand "subterm")
                                                    (("1"
                                                      (expand
                                                       "subterm")
                                                      (("1"
                                                        (prop)
                                                        (("1"
                                                          (decompose-equality)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "length"
                                                               1
                                                               1)
                                                              (("1"
                                                                (rewrite
                                                                 "length_append")
                                                                (("1"
                                                                  (rewrite
                                                                   "map_length")
                                                                  (("1"
                                                                    (rewrite
                                                                     "length_appendn")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (decompose-equality)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (decompose-equality)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (expand
                                                               "length"
                                                               1
                                                               1)
                                                              (("3"
                                                                (rewrite
                                                                 "length_append")
                                                                (("3"
                                                                  (rewrite
                                                                   "map_length")
                                                                  (("3"
                                                                    (rewrite
                                                                     "length_appendn")
                                                                    (("3"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (expand
                                                           "subterm")
                                                          (("4"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (rewrite "nth_append")
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (prop)
                                            (("1"
                                              (typepred "mult")
                                              (("1"
                                                (expand
                                                 "partial_recursive?")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (lemma
                                                     "valid_index_rec_offset")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "nth(mult`4, i-1)"
                                                       "length(mult`4)"
                                                       "1")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "length"
                                                             1
                                                             1)
                                                            (("1"
                                                              (rewrite
                                                               "length_append")
                                                              (("1"
                                                                (rewrite
                                                                 "map_length")
                                                                (("1"
                                                                  (rewrite
                                                                   "length_appendn")
                                                                  (("1"
                                                                    (expand
                                                                     "valid_index_rec")
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (rewrite
                                                                           "map_nth_rw")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (rewrite
                                                         "map_length")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (rewrite "map_length")
                                              (("2"
                                                (expand
                                                 "valid_index_rec")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (lemma
                                                     "vr_subterm")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (rewrite "map_length")
                                          (("2"
                                            (rewrite "length_appendn")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((limited const-decl "bool" mf_pvs0_computable nil)
    (below type-eq-decl nil nat_types nil)
    (cnst adt-constructor-decl "[T -> (cnst?)]" mf_PVS0Expr_adt nil)
    (cnst? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (printA const-decl "list[mf_PVS0Expr[nat]]"
     mf_pvs0_Recursion_Theorem nil)
    (append def-decl "list[T]" list_props nil)
    (length def-decl "nat" list_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nth_append formula-decl nil more_list_props structures)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (map_length formula-decl nil more_map_props nil)
    (nth def-decl "T" list_props nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (op2 adt-constructor-decl
     "[[nat, mf_PVS0Expr, mf_PVS0Expr] -> (op2?)]" mf_PVS0Expr_adt nil)
    (op2? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (sub const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sub1 const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sum const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (get_arg shared-adt-accessor-decl
     "[{x: mf_PVS0Expr | op1?(x) OR rec?(x)} -> mf_PVS0Expr]"
     mf_PVS0Expr_adt nil)
    (op1? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (rec adt-constructor-decl "[[nat, mf_PVS0Expr] -> (rec?)]"
     mf_PVS0Expr_adt nil)
    (get_from_list adt-accessor-decl "[(rec?) -> nat]" mf_PVS0Expr_adt
     nil)
    (rec? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (valid_index_rec const-decl "bool" mf_pvs0_lang nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (vr_subterm formula-decl nil mf_pvs0_Recursion_Theorem nil)
    (len skolem-const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (len2 skolem-const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (h skolem-const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (i skolem-const-decl
       "below[length(append(printA(len, len2), (: cnst(h) :)))]"
       mf_pvs0_Recursion_Theorem nil)
    (below type-eq-decl nil naturalnumbers nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (valid_index_rec_offset formula-decl nil mf_pvs0_lang nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_appendn formula-decl nil more_list_props structures)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (offset_rec def-decl "mf_PVS0Expr" mf_pvs0_lang nil)
    (lmf_PVS0Expr type-eq-decl nil mf_pvs0_expr nil)
    (PVS0 type-eq-decl nil mf_pvs0_expr nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (partial_recursive? const-decl "bool" mf_pvs0_computable nil)
    (partial_recursive type-eq-decl nil mf_pvs0_computable nil)
    (mult const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (^ def-decl "list[T]" more_list_props structures)
    (vr? adt-recognizer-decl "[mf_PVS0Expr -> boolean]" mf_PVS0Expr_adt
     nil)
    (vr adt-constructor-decl "(vr?)" mf_PVS0Expr_adt nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_append formula-decl nil list_props nil))
   nil))
 (Recursion_Theorem_TCC1 0
  (Recursion_Theorem_TCC1-2 nil 3797085964 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (list type-decl nil list_adt nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (lmf_PVS0Expr type-eq-decl nil mf_pvs0_expr nil)
    (PVS0 type-eq-decl nil mf_pvs0_expr nil)
    (partial_recursive? const-decl "bool" mf_pvs0_computable nil)
    (partial_recursive type-eq-decl nil mf_pvs0_computable nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (append def-decl "list[T]" list_props nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (length def-decl "nat" list_props nil)
    (valid_index_rec const-decl "bool" mf_pvs0_lang nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil))
   nil
   (Recursion_Theorem subtype "mf_pvs0_Recursion_Theorem.self"
    "PVS0[nat]"))
  (Recursion_Theorem_TCC1-1 nil 3797085836 ("" (subtype-tcc) nil nil)
   nil nil
   (Recursion_Theorem subtype "mf_pvs0_Recursion_Theorem.self"
    "PVS0[nat]")))
 (Recursion_Theorem_TCC2 0
  (Recursion_Theorem_TCC2-2 nil 3797086031 ("" (grind) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (lmf_PVS0Expr type-eq-decl nil mf_pvs0_expr nil)
    (PVS0 type-eq-decl nil mf_pvs0_expr nil)
    (partial_recursive type-eq-decl nil mf_pvs0_computable nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (append def-decl "list[T]" list_props nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (length def-decl "nat" list_props nil)
    (pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (valid_index_rec const-decl "bool" mf_pvs0_lang nil)
    (list type-decl nil list_adt nil)
    (partial_recursive? const-decl "bool" mf_pvs0_computable nil))
   nil
   (Recursion_Theorem subtype "0"
    "below[length[mf_PVS0Expr[nat]](print`4)]"))
  (Recursion_Theorem_TCC2-1 nil 3797085836 ("" (subtype-tcc) nil nil)
   nil nil
   (Recursion_Theorem subtype "0"
    "below[length[mf_PVS0Expr[nat]](print`4)]")))
 (Recursion_Theorem 0
  (Recursion_Theorem-5 nil 3797682796
   ("" (skeep)
    ((""
      (name "firsties"
            "append(pvs0`4,map(offset_rec(length(pvs0`4)))(printA(greater_index_rec_list(pvs0`4),length(pvs0`4))))")
      ((""
        (inst 1
         "(lop1,lop2,false_val, append(printA(greater_index_rec_list(pvs0`4),length(pvs0`4)), (: cnst(cons2nat(map(PVS02nat_limit(length(firsties)))(firsties))) :) ))")
        (("1" (beta)
          (("1" (prop)
            (("1" (expand "partial_recursive?")
              (("1" (skeep*)
                (("1" (typepred "i")
                  (("1" (rewrite "length_append")
                    (("1" (rewrite "map_length")
                      (("1" (rewrite "length_append")
                        (("1" (rewrite "nth_append")
                          (("1" (lift-if)
                            (("1" (prop)
                              (("1"
                                (expand "printA" 1)
                                (("1"
                                  (expand "length" 1 1)
                                  (("1"
                                    (rewrite "length_append")
                                    (("1"
                                      (rewrite "length_appendn")
                                      (("1"
                                        (rewrite "map_length")
                                        (("1"
                                          (lemma
                                           "greater_index_rec_list_correctness")
                                          (("1"
                                            (expand "valid_index_rec")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "pvs0`4"
                                                   "i")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (rewrite "map_append")
                                (("2"
                                  (rewrite "nth_append")
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (lemma "print_limited")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (inst -1 "0")
                                            (("1"
                                              (expand "limited")
                                              (("1"
                                                (inst
                                                 -1
                                                 "i-length(pvs0`4)")
                                                (("1"
                                                  (rewrite
                                                   "nth_append")
                                                  (("1"
                                                    (rewrite
                                                     "map_length")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (rewrite
                                                         "length_append")
                                                        (("1"
                                                          (lemma
                                                           "valid_index_rec_offset")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "length(pvs0`4)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_nth_rw")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "map_length")
                                                  (("2"
                                                    (rewrite
                                                     "length_append")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (rewrite "map_length")
                                        (("2"
                                          (expand "valid_index_rec")
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case
                                               "-1 *
                                                                                                                                                                                     length(printA(greater_index_rec_list(pvs0`4),
                                                                                                                                                                                                   length(pvs0`4)))
                                                                                                                                                                                     - length(pvs0`4)
                                                                                                                                                                                     + i = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1" (grind) nil nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "map_length")
                                    (("2"
                                      (rewrite "map_length")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (rewrite "map_length")
                            (("2" (rewrite "length_append") nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (lemma "print_correctness")
                (("2" (inst?)
                  (("2" (inst -1 "i")
                    (("2" (lemma "add_rec_list")
                      (("2"
                        (inst -1 "false_val" "nth(append
                                                                                       (printA
                                                                                        (greater_index_rec_list(pvs0`4),
                                                                                         length(pvs0`4)),
                                                                                        (: cnst
                                                                                           (cons2nat
                                                                                            (map
                                                                                             (PVS02nat_limit
                                                                                              (length(firsties)))
                                                                                             (firsties))) :)),
                                                                                       0)"
                         "append(printA(greater_index_rec_list(pvs0`4),
                                                                                 length(pvs0`4)),
                                                                          (: cnst(cons2nat(map
                                                                                           (PVS02nat_limit
                                                                                            (length(firsties)))
                                                                                           (firsties))) :))"
                         "pvs0`4" "lop1" "lop2" "i"
                         "p_recursive2nat(lop1,
                                                                                        lop2,
                                                                                        false_val,
                                                                                        append
                                                                                        (pvs0`4,
                                                                                         map
                                                                                         (offset_rec(length(pvs0`4)))
                                                                                         (append
                                                                                          (printA
                                                                                           (greater_index_rec_list(pvs0`4),
                                                                                            length(pvs0`4)),
                                                                                           (: cnst
                                                                                              (cons2nat
                                                                                               (map
                                                                                                (PVS02nat_limit
                                                                                                 (length(firsties)))
                                                                                                (firsties))) :)))))")
                        (("2" (assert)
                          (("2" (hide 2)
                            (("2" (expand "p_recursive2nat")
                              (("2"
                                (expand "listPVS0nat2nat")
                                (("2"
                                  (case
                                   "length
                                                                                                                              (append
                                                                                                                               (pvs0`4,
                                                                                                                                map
                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                (append
                                                                                                                                 (printA
                                                                                                                                  (greater_index_rec_list(pvs0`4),
                                                                                                                                   length(pvs0`4)),
                                                                                                                                  (: cnst
                                                                                                                                     (cons2nat
                                                                                                                                      (map
                                                                                                                                       (PVS02nat_limit
                                                                                                                                        (length(firsties)))
                                                                                                                                       (firsties))) :)))))
                                                                                                                              -
                                                                                                                              1 = length(firsties)")
                                  (("1"
                                    (replaces -1)
                                    (("1"
                                      (expand "listnat2nat")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide-all-but -1)
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (rewrite "map_length")
                                              (("1"
                                                (rewrite
                                                 "length_append")
                                                (("1"
                                                  (lemma
                                                   "subtype_length[mf_PVS0Expr_adt
                                                                                                                   [naturalnumbers.nat].mf_PVS0Expr,(mf_pvs0_computable
                                                                                                               [false_val,
                                                                                                                lop1,
                                                                                                                lop2].valid_index
                                                                                                               ((number_fields.-)
                                                                                                                    (list_props
                                                                                                                     [mf_PVS0Expr_adt
                                                                                                                      [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                     (list_props
                                                                                                                      [mf_PVS0Expr_adt
                                                                                                                       [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                      (pvs0`4,
                                                                                                                       list_adt_map
                                                                                                                       [mf_PVS0Expr_adt
                                                                                                                        [naturalnumbers.nat].mf_PVS0Expr,
                                                                                                                        mf_PVS0Expr_adt
                                                                                                                        [naturalnumbers.nat].mf_PVS0Expr].map
                                                                                                                       (mf_pvs0_lang
                                                                                                                        [naturalnumbers.nat].offset_rec
                                                                                                                        (list_props
                                                                                                                         [mf_PVS0Expr_adt
                                                                                                                          [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                         (pvs0`4)))
                                                                                                                       (list_props
                                                                                                                        [mf_PVS0Expr_adt
                                                                                                                         [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                        (printA
                                                                                                                         (greater_index_rec_list(pvs0`4),
                                                                                                                          list_props
                                                                                                                          [mf_PVS0Expr_adt
                                                                                                                           [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                          (pvs0`4)),
                                                                                                                         (: mf_PVS0Expr_adt
                                                                                                                            [naturalnumbers.nat].cnst
                                                                                                                            (cons2nat
                                                                                                                             (list_adt_map
                                                                                                                              [(mf_pvs0_computable
                                                                                                                                [false_val,
                                                                                                                                 lop1,
                                                                                                                                 lop2].valid_index
                                                                                                                                (list_props
                                                                                                                                 [mf_PVS0Expr_adt
                                                                                                                                  [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                 (firsties))),
                                                                                                                               naturalnumbers.nat].map
                                                                                                                              (mf_pvs0_computable
                                                                                                                               [false_val,
                                                                                                                                lop1,
                                                                                                                                lop2].PVS02nat_limit
                                                                                                                               (list_props
                                                                                                                                [mf_PVS0Expr_adt
                                                                                                                                 [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                (firsties)))
                                                                                                                              (firsties))) :))))),
                                                                                                                     1)))]")
                                                  (("1"
                                                    (rewrite
                                                     "map_length")
                                                    (("1"
                                                      (rewrite
                                                       "length_append")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "printA"
                                                           2
                                                           3)
                                                          (("1"
                                                            (expand
                                                             "length"
                                                             2
                                                             5)
                                                            (("1"
                                                              (rewrite
                                                               "length_append")
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_length")
                                                                  (("1"
                                                                    (rewrite
                                                                     "length_appendn")
                                                                    (("1"
                                                                      (expand
                                                                       "cons2nat"
                                                                       2
                                                                       3)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (prop)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             -1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_length")
                                                                              (("1"
                                                                                (lemma
                                                                                 "subtype_length[mf_PVS0Expr_adt[naturalnumbers.nat].mf_PVS0Expr, (mf_pvs0_computable
                                                                                                                     [false_val,
                                                                                                                      lop1,
                                                                                                                      lop2].valid_index
                                                                                                                     ((number_fields.-)
                                                                                                                          (list_props
                                                                                                                               [mf_PVS0Expr_adt
                                                                                                                                    [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                               (list_props
                                                                                                                                    [mf_PVS0Expr_adt
                                                                                                                                     [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                                    (pvs0`4,
                                                                                                                                     list_adt_map
                                                                                                                                     [mf_PVS0Expr_adt
                                                                                                                                      [naturalnumbers.nat].mf_PVS0Expr,
                                                                                                                                      mf_PVS0Expr_adt
                                                                                                                                      [naturalnumbers.nat].mf_PVS0Expr].map
                                                                                                                                     (mf_pvs0_lang
                                                                                                                                      [naturalnumbers.nat].offset_rec
                                                                                                                                      (list_props
                                                                                                                                       [mf_PVS0Expr_adt
                                                                                                                                        [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                       (pvs0`4)))
                                                                                                                                     (list_props
                                                                                                                                      [mf_PVS0Expr_adt
                                                                                                                                       [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                                      (printA
                                                                                                                                       (greater_index_rec_list(pvs0`4),
                                                                                                                                        list_props
                                                                                                                                        [mf_PVS0Expr_adt
                                                                                                                                         [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                        (pvs0`4)),
                                                                                                                                       (: mf_PVS0Expr_adt
                                                                                                                                          [naturalnumbers.nat].cnst
                                                                                                                                          (cons2nat
                                                                                                                                           (list_adt_map
                                                                                                                                            [(mf_pvs0_computable
                                                                                                                                              [false_val,
                                                                                                                                               lop1,
                                                                                                                                               lop2].valid_index
                                                                                                                                              (list_props
                                                                                                                                               [mf_PVS0Expr_adt
                                                                                                                                                [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                               (firsties))),
                                                                                                                                             naturalnumbers.nat].map
                                                                                                                                            (mf_pvs0_computable
                                                                                                                                             [false_val,
                                                                                                                                              lop1,
                                                                                                                                              lop2].PVS02nat_limit
                                                                                                                                             (list_props
                                                                                                                                              [mf_PVS0Expr_adt
                                                                                                                                               [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                              (firsties)))
                                                                                                                                            (firsties))) :))))),
                                                                                                                           1)))]")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "length_append")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "map_length")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "length_append")
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 1)
                                                                                (("2"
                                                                                  (case
                                                                                   "length(map(PVS02nat_limit(length(firsties)))
                (append(pvs0`4,
                        map(offset_rec(length(pvs0`4)))
                           (append(printA(greater_index_rec_list(pvs0`4),
                                          length(pvs0`4)),
                                   (: cnst
                                      (cons2nat
                                       (map
                                        (PVS02nat_limit(length(firsties)))
                                        (firsties))) :)))))) = length(append(pvs0`4,
                        map(offset_rec(length(pvs0`4)))
                           (append(printA(greater_index_rec_list(pvs0`4),
                                          length(pvs0`4)),
                                   (: cnst
                                      (cons2nat
                                       (map
                                        (PVS02nat_limit(length(firsties)))
                                        (firsties))) :)))))")
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "length_append")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "map_length")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "length_append")
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "map_length")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (rewrite
                                                                                     "every_forall")
                                                                                    (("3"
                                                                                      (skeep)
                                                                                      (("3"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                   (append[mf_PVS0Expr[nat]]
                        (printA(greater_index_rec_list(pvs0`4),
                                length[mf_PVS0Expr[nat]](pvs0`4)),
                         (: cnst[nat]
                                (cons2nat[false_val, lop1, lop2]
                                     (map
                                      [(valid_index(length(firsties))), nat]
                                      (PVS02nat_limit[false_val, lop1, lop2]
                                       (length[mf_PVS0Expr[nat]](firsties)))
                                      (firsties))) :)))")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "every_forall")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "n")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "print_limited")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "greater_index_rec_list(pvs0`4)"
                                                                                             "length[mf_PVS0Expr[nat]](pvs0`4)"
                                                                                             "(cons2nat[false_val, lop1, lop2]
                                     (map
                                      [(valid_index(length(firsties))), nat]
                                      (PVS02nat_limit[false_val, lop1, lop2]
                                       (length[mf_PVS0Expr[nat]](firsties)))
                                      (firsties)))")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "limited")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "valid_index")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "n")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "length_append")
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "valid_index_rec_offset")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "firsties"
                                                                                                           1
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "length_append")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "nth[mf_PVS0Expr[number]](map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                              (offset_rec[nat]
                                   (length[mf_PVS0Expr[nat]](pvs0`4)))
                              (append[mf_PVS0Expr[nat]]
                                   (printA
                                    (greater_index_rec_list(pvs0`4),
                                     length[mf_PVS0Expr[nat]](pvs0`4)),
                                    (: cnst[nat]
                                       (cons2nat[false_val, lop1, lop2]
                                        (map
                                         [(valid_index(length(firsties))),
                                          nat]
                                         (PVS02nat_limit
                                          [false_val, lop1, lop2]
                                          (length[mf_PVS0Expr[nat]]
                                           (firsties)))
                                         (firsties))) :))),
                          n) = nth[mf_PVS0Expr[nat]](map(offset_rec(length[mf_PVS0Expr[nat]](pvs0`4)))
                             (append(printA
                                     (greater_index_rec_list(pvs0`4),
                                      length[mf_PVS0Expr[nat]](pvs0`4)),
                                     (: cnst
                                        ((cons2nat[false_val, lop1, lop2]
                                          (map
                                           [(valid_index
                                             (length(firsties))),
                                            nat]
                                           (PVS02nat_limit
                                            [false_val, lop1, lop2]
                                            (length[mf_PVS0Expr[nat]]
                                             (firsties)))
                                           (firsties)))) :))),
                          n)")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "map_length")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "n")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "length[mf_PVS0Expr[number]](map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                  (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                  (append[mf_PVS0Expr[nat]]
                       (printA(greater_index_rec_list(pvs0`4),
                               length[mf_PVS0Expr[nat]](pvs0`4)),
                        (: cnst[nat]
                               (cons2nat[false_val, lop1, lop2]
                                    (map
                                     [(valid_index(length(firsties))), nat]
                                     (PVS02nat_limit[false_val, lop1, lop2]
                                      (length[mf_PVS0Expr[nat]](firsties)))
                                     (firsties))) :)))) = length[mf_PVS0Expr[nat]](map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                  (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                  (append[mf_PVS0Expr[nat]]
                       (printA(greater_index_rec_list(pvs0`4),
                               length[mf_PVS0Expr[nat]](pvs0`4)),
                        (: cnst[nat]
                               (cons2nat[false_val, lop1, lop2]
                                    (map
                                     [(valid_index(length(firsties))), nat]
                                     (PVS02nat_limit[false_val, lop1, lop2]
                                      (length[mf_PVS0Expr[nat]](firsties)))
                                     (firsties))) :))))")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "map_length")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "map_length")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide
                                                                                     -)
                                                                                    (("4"
                                                                                      (rewrite
                                                                                       "every_forall")
                                                                                      (("4"
                                                                                        (skeep)
                                                                                        (("4"
                                                                                          (typepred
                                                                                           "nth(pvs0`4, n)")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            (("4"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("4"
                                                                                                (expand
                                                                                                 "firsties")
                                                                                                (("4"
                                                                                                  (rewrite
                                                                                                   "length_append")
                                                                                                  (("4"
                                                                                                    (rewrite
                                                                                                     "map_length")
                                                                                                    (("4"
                                                                                                      (expand
                                                                                                       "printA")
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "length"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("4"
                                                                                                          (rewrite
                                                                                                           "length_append")
                                                                                                          (("4"
                                                                                                            (rewrite
                                                                                                             "length_appendn")
                                                                                                            (("4"
                                                                                                              (expand
                                                                                                               "valid_index")
                                                                                                              (("4"
                                                                                                                (expand
                                                                                                                 "valid_index_rec")
                                                                                                                (("4"
                                                                                                                  (skeep)
                                                                                                                  (("4"
                                                                                                                    (lemma
                                                                                                                     "greater_index_rec_list_correctness")
                                                                                                                    (("4"
                                                                                                                      (inst?)
                                                                                                                      (("4"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "append
                                                                                                                                                                                       (pvs0`4,
                                                                                                                                                                                        map
                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                        (append
                                                                                                                                                                                         (printA
                                                                                                                                                                                          (greater_index_rec_list
                                                                                                                                                                                           (pvs0`4),
                                                                                                                                                                                           length(pvs0`4)),
                                                                                                                                                                                          (: cnst
                                                                                                                                                                                             (cons2nat
                                                                                                                                                                                              (map
                                                                                                                                                                                               (PVS02nat_limit
                                                                                                                                                                                                (length(firsties)))
                                                                                                                                                                                               (firsties))) :)))) = append[(valid_index(length(firsties)))]
                                                                                                                                                                                       (pvs0`4,
                                                                                                                                                                                        map
                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                        (append
                                                                                                                                                                                         (printA
                                                                                                                                                                                          (greater_index_rec_list
                                                                                                                                                                                           (pvs0`4),
                                                                                                                                                                                           length(pvs0`4)),
                                                                                                                                                                                          (: cnst
                                                                                                                                                                                             (cons2nat
                                                                                                                                                                                              (map
                                                                                                                                                                                               (PVS02nat_limit
                                                                                                                                                                                                (length(firsties)))
                                                                                                                                                                                               (firsties))) :))))")
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "map_append")
                                                                                (("1"
                                                                                  (case
                                                                                   "append
                                                                                                                                                                                                       (map
                                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                        (printA
                                                                                                                                                                                                         (greater_index_rec_list
                                                                                                                                                                                                          (pvs0`4),
                                                                                                                                                                                                          length(pvs0`4))),
                                                                                                                                                                                                        map
                                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                        ((: cnst
                                                                                                                                                                                                            (cons2nat
                                                                                                                                                                                                             (map
                                                                                                                                                                                                              (PVS02nat_limit
                                                                                                                                                                                                               (length(firsties)))
                                                                                                                                                                                                              (firsties))) :))) = append[(valid_index
                                                                                                                                                                                                        (length(firsties)))]
                                                                                                                                                                                                       (map
                                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                        (printA
                                                                                                                                                                                                         (greater_index_rec_list
                                                                                                                                                                                                          (pvs0`4),
                                                                                                                                                                                                          length(pvs0`4))),
                                                                                                                                                                                                        map
                                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                        ((: cnst
                                                                                                                                                                                                            (cons2nat
                                                                                                                                                                                                             (map
                                                                                                                                                                                                              (PVS02nat_limit
                                                                                                                                                                                                               (length(firsties)))
                                                                                                                                                                                                              (firsties))) :)))")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "append_assoc[(valid_index
                                                                                                                                                                                (length(firsties)))]")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "pvs0`4"
                                                                                         "map
                                                                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                                                                (printA
                                                                                                                                                                                 (greater_index_rec_list
                                                                                                                                                                                  (pvs0`4),
                                                                                                                                                                                  length(pvs0`4)))"
                                                                                         "map
                                                                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                                                                ((: cnst
                                                                                                                                                                                    (cons2nat
                                                                                                                                                                                     (map
                                                                                                                                                                                      (PVS02nat_limit
                                                                                                                                                                                       (length(firsties)))
                                                                                                                                                                                      (firsties))) :))")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (hide
                                                                                             (-1
                                                                                              -2))
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "subtype_map[(valid_index(length(firsties))),nat, (mf_pvs0_computable
                                                                                                                                                                         [false_val,
                                                                                                                                                                          lop1,
                                                                                                                                                                          lop2].valid_index
                                                                                                                                                                         ((number_fields.-)
                                                                                                                                                                          (list_props
                                                                                                                                                                           [mf_PVS0Expr_adt
                                                                                                                                                                            [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                                           (list_props
                                                                                                                                                                            [mf_PVS0Expr_adt
                                                                                                                                                                             [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                                                                            (pvs0`4,
                                                                                                                                                                             list_adt_map
                                                                                                                                                                             [mf_PVS0Expr_adt
                                                                                                                                                                              [naturalnumbers.nat].mf_PVS0Expr,
                                                                                                                                                                              mf_PVS0Expr_adt
                                                                                                                                                                              [naturalnumbers.nat].mf_PVS0Expr].map
                                                                                                                                                                             (mf_pvs0_lang
                                                                                                                                                                              [naturalnumbers.nat].offset_rec
                                                                                                                                                                              (list_props
                                                                                                                                                                               [mf_PVS0Expr_adt
                                                                                                                                                                                [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                                               (pvs0`4)))
                                                                                                                                                                             (list_props
                                                                                                                                                                              [mf_PVS0Expr_adt
                                                                                                                                                                               [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                                                                              (printA
                                                                                                                                                                               (greater_index_rec_list
                                                                                                                                                                                (pvs0`4),
                                                                                                                                                                                list_props
                                                                                                                                                                                [mf_PVS0Expr_adt
                                                                                                                                                                                 [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                                                (pvs0`4)),
                                                                                                                                                                               (: mf_PVS0Expr_adt
                                                                                                                                                                                  [naturalnumbers.nat].cnst
                                                                                                                                                                                  (cons2nat
                                                                                                                                                                                   (list_adt_map
                                                                                                                                                                                    [(mf_pvs0_computable
                                                                                                                                                                                      [false_val,
                                                                                                                                                                                       lop1,
                                                                                                                                                                                       lop2].valid_index
                                                                                                                                                                                      (list_props
                                                                                                                                                                                       [mf_PVS0Expr_adt
                                                                                                                                                                                        [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                                                       (firsties))),
                                                                                                                                                                                     naturalnumbers.nat].map
                                                                                                                                                                                    (mf_pvs0_computable
                                                                                                                                                                                     [false_val,
                                                                                                                                                                                      lop1,
                                                                                                                                                                                      lop2].PVS02nat_limit
                                                                                                                                                                                     (list_props
                                                                                                                                                                                      [mf_PVS0Expr_adt
                                                                                                                                                                                       [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                                                      (firsties)))
                                                                                                                                                                                    (firsties))) :))))),
                                                                                                                                                                           1))), nat]")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "map_append[(valid_index(length(firsties))),nat]")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "append
                                                                                                                                                                                                                [(valid_index
                                                                                                                                                                                                                  (length(firsties)))]
                                                                                                                                                                                                                (pvs0`4,
                                                                                                                                                                                                                 map
                                                                                                                                                                                                                 (offset_rec
                                                                                                                                                                                                                  (length(pvs0`4)))
                                                                                                                                                                                                                 (printA
                                                                                                                                                                                                                  (greater_index_rec_list
                                                                                                                                                                                                                   (pvs0`4),
                                                                                                                                                                                                                   length(pvs0`4))))"
                                                                                                   "map
                                                                                                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                ((: cnst
                                                                                                                                                                                                                    (cons2nat
                                                                                                                                                                                                                     (map
                                                                                                                                                                                                                      (PVS02nat_limit
                                                                                                                                                                                                                       (length(firsties)))
                                                                                                                                                                                                                      (firsties))) :))"
                                                                                                   "PVS02nat_limit
                                                                                                                                                                                                              (length(firsties))")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "rac_append")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "rac
                                                                                                                                                                                                                                                                    (map
                                                                                                                                                                                                                                                                     (PVS02nat_limit
                                                                                                                                                                                                                                                                      (length(firsties)))
                                                                                                                                                                                                                                                                     (map
                                                                                                                                                                                                                                                                      (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                                                                      ((: cnst
                                                                                                                                                                                                                                                                          (cons2nat
                                                                                                                                                                                                                                                                           (map
                                                                                                                                                                                                                                                                            (PVS02nat_limit
                                                                                                                                                                                                                                                                             (length(firsties)))
                                                                                                                                                                                                                                                                            (firsties))) :)))) = 1
                                                                                                                                                                                                                                                               +
                                                                                                                                                                                                                                                               5
                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                               cons2nat
                                                                                                                                                                                                                                                               (map
                                                                                                                                                                                                                                                                (PVS02nat_limit(length(firsties)))
                                                                                                                                                                                                                                                                (firsties))")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "rdc_append")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "rdc
                                                                                                                                                                                                                                                                                                      (map
                                                                                                                                                                                                                                                                                                       (PVS02nat_limit
                                                                                                                                                                                                                                                                                                        (length(firsties)))
                                                                                                                                                                                                                                                                                                       (map
                                                                                                                                                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                                                                                                        ((: cnst
                                                                                                                                                                                                                                                                                                            (cons2nat
                                                                                                                                                                                                                                                                                                             (map
                                                                                                                                                                                                                                                                                                              (PVS02nat_limit
                                                                                                                                                                                                                                                                                                               (length(firsties)))
                                                                                                                                                                                                                                                                                                              (firsties))) :)))) = null")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "append_null")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "append
                                                                                                                                                                                                                                                                                                                      [(valid_index
                                                                                                                                                                                                                                                                                                                        (length(firsties)))]
                                                                                                                                                                                                                                                                                                                      (pvs0`4,
                                                                                                                                                                                                                                                                                                                       map
                                                                                                                                                                                                                                                                                                                       (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                                                                                                                       (printA
                                                                                                                                                                                                                                                                                                                        (greater_index_rec_list
                                                                                                                                                                                                                                                                                                                         (pvs0`4),
                                                                                                                                                                                                                                                                                                                         length(pvs0`4)))) = firsties")
                                                                                                                      (("1"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "print_correctness")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "i"
                                                                                                                                 "greater_index_rec_list(pvs0`4)"
                                                                                                                                 "length(pvs0`4)"
                                                                                                                                 "cons2nat
                                       (map
                                        (PVS02nat_limit(length(firsties)))
                                        (firsties))")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "semantic_rel")
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "map"
                                                                                                               1
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "map"
                                                                                                                 1
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "map"
                                                                                                                   1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "map"
                                                                                                                     1
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "vr ")
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "x")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "valid_index")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "valid_index_rec")
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "length_append")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "map_length")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "length_append")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "firsties")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "length_append")
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "map_length")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
               (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
               ((: cnst[nat]
                       (cons2nat[false_val, lop1, lop2]
                            (map[(valid_index(length(firsties))), nat]
                                 (PVS02nat_limit[false_val, lop1, lop2]
                                      (length[mf_PVS0Expr[nat]](firsties)))
                                 (firsties))) :))")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "every_forall")
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "every_forall")
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "valid_index")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "map"
                                                                                                           1
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "map"
                                                                                                             1
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "nth"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "n")
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (rewrite
                                                                                             "every_forall")
                                                                                            (("3"
                                                                                              (skeep)
                                                                                              (("3"
                                                                                                (typepred
                                                                                                 "nth(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                   (printA(greater_index_rec_list(pvs0`4),
                           length[mf_PVS0Expr[nat]](pvs0`4))),
               n)")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("3"
                                                                                                      (lemma
                                                                                                       "print_limited")
                                                                                                      (("3"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "greater_index_rec_list(pvs0`4)"
                                                                                                         "length[mf_PVS0Expr[nat]](pvs0`4)"
                                                                                                         "0")
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "limited")
                                                                                                          (("3"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "n")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "nth_append")
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "valid_index"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "length_append")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "firsties"
                                                                                                                         1
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "length_append")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "map_length")
                                                                                                                            (("1"
                                                                                                                              (use
                                                                                                                               "valid_index_rec_offset")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "map_nth_rw"
                                                                                                                                     :dir
                                                                                                                                     rl)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "n")
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        1))
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "map_length")
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           " length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                  (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                  (printA(greater_index_rec_list(pvs0`4),
                          length[mf_PVS0Expr[nat]](pvs0`4)))) = length(printA(greater_index_rec_list(pvs0`4),
                     length[mf_PVS0Expr[nat]](pvs0`4)))")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             -1
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "map_length")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 -1
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "n")
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                  (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                  (printA(greater_index_rec_list(pvs0`4),
                          length[mf_PVS0Expr[nat]](pvs0`4)))) = length(printA(greater_index_rec_list(pvs0`4),
                      length[mf_PVS0Expr[nat]](pvs0`4)))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       -1
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "map_length")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "n")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "length_append")
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     " length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                  (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                  (printA(greater_index_rec_list(pvs0`4),
                          length[mf_PVS0Expr[nat]](pvs0`4)))) = length[mf_PVS0Expr[nat]]
            (printA(greater_index_rec_list(pvs0`4),
                    length[mf_PVS0Expr[nat]](pvs0`4)))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       -1
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "map_length")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("4"
                                                                                      (rewrite
                                                                                       "subtype_every")
                                                                                      (("4"
                                                                                        (rewrite
                                                                                         "every_forall")
                                                                                        (("4"
                                                                                          (skeep)
                                                                                          (("4"
                                                                                            (expand
                                                                                             "restrict")
                                                                                            (("4"
                                                                                              (typepred
                                                                                               "map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                                                                                                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                                                                                                   (printA(greater_index_rec_list(pvs0`4),
                                                                                                           length[mf_PVS0Expr[nat]](pvs0`4)))")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                (("4"
                                                                                                  (typepred
                                                                                                   "nth(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                                                                                                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                                                                                                   (printA(greater_index_rec_list(pvs0`4),
                                                                                                           length[mf_PVS0Expr[nat]](pvs0`4))),
                                                                                               n)")
                                                                                                  (("4"
                                                                                                    (assert)
                                                                                                    (("4"
                                                                                                      (hide
                                                                                                       -)
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "valid_index")
                                                                                                        (("4"
                                                                                                          (lemma
                                                                                                           "print_limited")
                                                                                                          (("4"
                                                                                                            (inst?)
                                                                                                            (("4"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "0")
                                                                                                              (("4"
                                                                                                                (expand
                                                                                                                 "limited")
                                                                                                                (("4"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "n")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "nth_append")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "n")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "map_length")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "length_append")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "valid_index_rec_offset")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "length[mf_PVS0Expr[nat]](pvs0`4)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "firsties")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "length_append")
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "map_length")
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "map_nth_rw")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "n")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "map_length")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (rewrite
                                                                                                                     "length_append")
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "n")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "map_length")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (rewrite
                                                                                 "every_forall")
                                                                                (("3"
                                                                                  (skeep)
                                                                                  (("3"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "nth(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                                                                                                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                                                                                                   (append[mf_PVS0Expr[nat]]
                                                                                                        (printA(greater_index_rec_list(pvs0`4),
                                                                                                                length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                                                         (: cnst[nat]
                                                                                                                (cons2nat(map
                                                                                                                          [(valid_index(length(firsties))),
                                                                                                                           nat]
                                                                                                                          (PVS02nat_limit
                                                                                                                           [false_val, lop1, lop2]
                                                                                                                           (length[mf_PVS0Expr[nat]]
                                                                                                                            (firsties)))
                                                                                                                          (firsties))) :))),
                                                                                               n)")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "print_limited")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "limited")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "n")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "valid_index")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "length_append")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "firsties"
                                                                                                   1
                                                                                                   3)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "length_append")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "map_length")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "cons(cnst
                                                                                                                                                         (cons2nat
                                                                                                                                                          (map
                                                                                                                                                           [(valid_index(length(firsties))),
                                                                                                                                                            nat]
                                                                                                                                                           (PVS02nat_limit
                                                                                                                                                            [false_val, lop1, lop2]
                                                                                                                                                            (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                                                                           (firsties))),
                                                                                                                                                         null) = (: cnst[nat]
                                                                                                                                                          (cons2nat
                                                                                                                                                           (map
                                                                                                                                                            [(valid_index(length(firsties))),
                                                                                                                                                             nat]
                                                                                                                                                            (PVS02nat_limit
                                                                                                                                                             [false_val, lop1, lop2]
                                                                                                                                                             (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                                                                            (firsties))) :)")
                                                                                                        (("1"
                                                                                                          (replaces
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "lo"
                                                                                                             "append[mf_PVS0Expr[nat]]
                                                                                                                                       (printA
                                                                                                                                        (greater_index_rec_list(pvs0`4),
                                                                                                                                         length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                                                                                        (: cnst[nat]
                                                                                                                                           (cons2nat
                                                                                                                                            (map
                                                                                                                                             [(valid_index(length(firsties))),
                                                                                                                                              nat]
                                                                                                                                             (PVS02nat_limit
                                                                                                                                              [false_val, lop1, lop2]
                                                                                                                                              (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                                                             (firsties))) :))")
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "valid_index_rec_offset")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "n")
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "cons[mf_PVS0Expr[nat]]
                                                                                                                                        (cnst[nat]
                                                                                                                                             (cons2nat(map
                                                                                                                                                       [(valid_index[false_val, lop1, lop2]
                                                                                                                                                         (length[mf_PVS0Expr[nat]](firsties))),
                                                                                                                                                        nat]
                                                                                                                                                       (PVS02nat_limit[false_val, lop1, lop2]
                                                                                                                                                        (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                                                                       (firsties))),
                                                                                                                                         null[mf_PVS0Expr[nat]]) = (: cnst[nat]
                                                                                                                                                  (cons2nat(map
                                                                                                                                                            [(valid_index(length(firsties))),
                                                                                                                                                             nat]
                                                                                                                                                            (PVS02nat_limit
                                                                                                                                                             [false_val, lop1, lop2]
                                                                                                                                                             (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                                                                            (firsties))) :)")
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "lo"
                                                                                                       "append[mf_PVS0Expr[nat]]
                                                                                                                    (printA(greater_index_rec_list(pvs0`4),
                                                                                                                            length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                                                                     (: cnst[nat]
                                                                                                                            (cons2nat(map[(valid_index(length(firsties))), nat]
                                                                                                                                          (PVS02nat_limit[false_val, lop1, lop2]
                                                                                                                                           (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                                                          (firsties))) :))")
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_length")
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "map_length[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("4"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("4"
                                                                                (rewrite
                                                                                 "every_forall")
                                                                                (("4"
                                                                                  (skeep)
                                                                                  (("4"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "nth(pvs0`4, n)")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "valid_index")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "firsties")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "length_append")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "printA")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "length"
                                                                                                 1
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "length_append")
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "length_appendn")
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "map_length")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "greater_index_rec_list_correctness")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "valid_index_rec")
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (rewrite
                                                   "every_forall")
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (typepred
                                                       "nth(append[mf_PVS0Expr[nat]]
                    (pvs0`4,
                     map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                         (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                         (append[mf_PVS0Expr[nat]]
                              (printA(greater_index_rec_list(pvs0`4),
                                      length[mf_PVS0Expr[nat]](pvs0`4)),
                               (: cnst[nat]
                                      (cons2nat[false_val, lop1, lop2]
                                       (map
                                        [(valid_index(length(firsties))),
                                         nat]
                                        (PVS02nat_limit
                                         [false_val, lop1, lop2]
                                         (length[mf_PVS0Expr[nat]]
                                          (firsties)))
                                        (firsties))) :)))),
                n)")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (rewrite
                                                             "nth_append")
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (expand
                                                                   "firsties")
                                                                  (("1"
                                                                    (rewrite
                                                                     "length_append")
                                                                    (("1"
                                                                      (rewrite
                                                                       "map_length")
                                                                      (("1"
                                                                        (expand
                                                                         "printA")
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           1
                                                                           1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "length_append")
                                                                            (("1"
                                                                              (rewrite
                                                                               "length_appendn")
                                                                              (("1"
                                                                                (expand
                                                                                 "valid_index")
                                                                                (("1"
                                                                                  (expand
                                                                                   "valid_index_rec")
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "greater_index_rec_list_correctness")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "valid_index")
                                                                  (("2"
                                                                    (expand
                                                                     "firsties"
                                                                     2
                                                                     3)
                                                                    (("2"
                                                                      (rewrite
                                                                       "length_append")
                                                                      (("2"
                                                                        (rewrite
                                                                         "map_length")
                                                                        (("2"
                                                                          (lemma
                                                                           "print_limited")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "greater_index_rec_list(pvs0`4)"
                                                                             "length[mf_PVS0Expr[nat]](pvs0`4)"
                                                                             "(cons2nat[false_val, lop1, lop2]
                                        (map
                                         [(valid_index(length(firsties))),
                                          nat]
                                         (PVS02nat_limit
                                          [false_val, lop1, lop2]
                                          (length[mf_PVS0Expr[nat]]
                                           (firsties)))
                                         (firsties)))")
                                                                            (("2"
                                                                              (expand
                                                                               "limited")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "n - length(pvs0`4)")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "length_append")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "valid_index_rec_offset")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-1
                                                                                              2))
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "map_nth_rw"
                                                                                               :dir
                                                                                               rl)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (1
                                                                                          2))
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   3)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "n")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "length_append"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "map_length")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (typepred
                                                                 "n")
                                                                (("2"
                                                                  (rewrite
                                                                   "length_append")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (expand "firsties" 1 3)
                                      (("2"
                                        (rewrite "length_append")
                                        (("2"
                                          (rewrite "length_append")
                                          (("2"
                                            (rewrite "map_length")
                                            (("2"
                                              (rewrite "map_length")
                                              (("2"
                                                (rewrite
                                                 "length_append")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide -1)
          (("2" (expand "partial_recursive?")
            (("2" (skeep)
              (("2" (rewrite "nth_append")
                (("1" (lift-if)
                  (("1" (prop)
                    (("1" (expand "printA" 1 1)
                      (("1" (expand "nth" 1 1)
                        (("1" (lift-if)
                          (("1" (prop)
                            (("1" (rewrite "length_append")
                              (("1"
                                (expand "valid_index_rec")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (expand "subterm")
                                    (("1"
                                      (expand "subterm")
                                      (("1"
                                        (expand "subterm")
                                        (("1"
                                          (expand "subterm")
                                          (("1"
                                            (expand "subterm")
                                            (("1"
                                              (expand "subterm")
                                              (("1"
                                                (expand "subterm")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (decompose-equality)
                                                    (("1"
                                                      (expand
                                                       "printA"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "length"
                                                         1
                                                         1)
                                                        (("1"
                                                          (rewrite
                                                           "length_append")
                                                          (("1"
                                                            (rewrite
                                                             "map_length")
                                                            (("1"
                                                              (rewrite
                                                               "length_appendn")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (decompose-equality)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (decompose-equality)
                                                    (("3"
                                                      (expand
                                                       "printA"
                                                       1)
                                                      (("3"
                                                        (expand
                                                         "length"
                                                         1
                                                         1)
                                                        (("3"
                                                          (rewrite
                                                           "length_append")
                                                          (("3"
                                                            (rewrite
                                                             "map_length")
                                                            (("3"
                                                              (rewrite
                                                               "length_appendn")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (rewrite "nth_append")
                              (("1"
                                (lift-if)
                                (("1"
                                  (prop)
                                  (("1"
                                    (typepred "mult")
                                    (("1"
                                      (expand "partial_recursive?")
                                      (("1"
                                        (prop)
                                        (("1"
                                          (inst -4 "i-1")
                                          (("1"
                                            (use
                                             "valid_index_rec_offset")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (rewrite
                                                 "length_append")
                                                (("1"
                                                  (expand "printA" 1)
                                                  (("1"
                                                    (expand
                                                     "length"
                                                     1
                                                     1)
                                                    (("1"
                                                      (rewrite
                                                       "length_append")
                                                      (("1"
                                                        (rewrite
                                                         "map_length")
                                                        (("1"
                                                          (rewrite
                                                           "length_appendn")
                                                          (("1"
                                                            (rewrite
                                                             "map_nth_rw")
                                                            (("1"
                                                              (expand
                                                               "valid_index_rec")
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (rewrite "map_length")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "valid_index_rec")
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (lemma "vr_subterm")
                                        (("2"
                                          (inst?)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "printA" -1)
                                (("2"
                                  (expand "length" -1 1)
                                  (("2"
                                    (rewrite "length_append")
                                    (("2"
                                      (rewrite "length_append")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "i -
                                                                                                length(printA(greater_index_rec_list(pvs0`4),
                                                                                                              length[mf_PVS0Expr[nat]](pvs0`4))) = 0")
                      (("1" (replaces -1) (("1" (grind) nil nil)) nil)
                       ("2" (hide 3)
                        (("2" (typepred "i")
                          (("2" (rewrite "length_append")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (typepred "i")
                  (("2" (rewrite "length_append") nil nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (grind) nil nil))
        nil))
      nil))
    nil)
   ((PVS02nat_limit def-decl "nat" mf_pvs0_computable nil)
    (firsties skolem-const-decl "list[mf_PVS0Expr[nat]]"
     mf_pvs0_Recursion_Theorem nil)
    (valid_index const-decl "bool" mf_pvs0_computable nil)
    (cons2nat def-decl "nat" mf_pvs0_computable nil)
    (lop2 const-decl "list[[[nat, nat] -> nat]]" mf_pvs0_basic_programs
     nil)
    (lop1 const-decl "list[[nat -> nat]]" mf_pvs0_basic_programs nil)
    (false_val const-decl "nat" mf_pvs0_basic_programs nil)
    (cnst adt-constructor-decl "[T -> (cnst?)]" mf_PVS0Expr_adt nil)
    (cnst? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (pvs0 skolem-const-decl "PVS0[nat]" mf_pvs0_Recursion_Theorem nil)
    (partial_recursive? const-decl "bool" mf_pvs0_computable nil)
    (partial_recursive type-eq-decl nil mf_pvs0_computable nil)
    (TRUE const-decl "bool" booleans nil)
    (length_append formula-decl nil list_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_singleton formula-decl nil more_list_props structures)
    (map_append formula-decl nil map_append nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (subterm adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (sum const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sub1 const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (sub const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (pi2 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (pi1 const-decl "[nat -> nat]" mf_pvs0_basic_programs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (print_limited formula-decl nil mf_pvs0_Recursion_Theorem nil)
    (i skolem-const-decl "below[length(append(pvs0`4,
                    map(offset_rec(length(pvs0`4)))
                       (append(printA(greater_index_rec_list(pvs0`4),
                                      length(pvs0`4)),
                               (: cnst(cons2nat
                                       (map
                                        (PVS02nat_limit(length(firsties)))
                                        (firsties))) :)))))]"
       mf_pvs0_Recursion_Theorem nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nth def-decl "T" list_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (map_nth_rw formula-decl nil more_map_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (valid_index_rec_offset formula-decl nil mf_pvs0_lang nil)
    (limited const-decl "bool" mf_pvs0_computable nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vr adt-constructor-decl "(vr?)" mf_PVS0Expr_adt nil)
    (vr? adt-recognizer-decl "[mf_PVS0Expr -> boolean]" mf_PVS0Expr_adt
     nil)
    (^ def-decl "list[T]" more_list_props structures)
    (mult const-decl "partial_recursive" mf_pvs0_basic_programs nil)
    (valid_index_rec const-decl "bool" mf_pvs0_lang nil)
    (greater_index_rec_list_correctness formula-decl nil
     mf_pvs0_Recursion_Theorem nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_appendn formula-decl nil more_list_props structures)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nth_append formula-decl nil more_list_props structures)
    (map_length formula-decl nil more_map_props nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (print_correctness formula-decl nil mf_pvs0_Recursion_Theorem nil)
    (p_recursive2nat const-decl "nat" mf_pvs0_Recursion_Theorem nil)
    (listPVS0nat2nat const-decl "nat" mf_pvs0_computable nil)
    (n skolem-const-decl "below(length(append[mf_PVS0Expr[nat]]
                 (pvs0`4,
                  map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                      (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                      (append[mf_PVS0Expr[nat]]
                           (printA(greater_index_rec_list(pvs0`4),
                                   length[mf_PVS0Expr[nat]](pvs0`4)),
                            (: cnst[nat]
                                   (cons2nat[false_val, lop1, lop2]
                                    (map
                                     [(valid_index(length(firsties))), nat]
                                     (PVS02nat_limit[false_val, lop1, lop2]
                                      (length[mf_PVS0Expr[nat]](firsties)))
                                     (firsties))) :))))))"
     mf_pvs0_Recursion_Theorem nil)
    (restrict const-decl "R" restrict nil)
    (n skolem-const-decl
     "below(length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                 (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                 (printA(greater_index_rec_list(pvs0`4),
                         length[mf_PVS0Expr[nat]](pvs0`4)))))"
     mf_pvs0_Recursion_Theorem nil)
    (subtype_every formula-decl nil subtype_length nil)
    (set type-eq-decl nil sets nil)
    (rac_append formula-decl nil more_list_props structures)
    (rdc const-decl "list[T]" more_list_props structures)
    (append_null formula-decl nil list_props nil)
    (semantic_rel const-decl "bool" mf_pvs0_lang nil)
    (reverse def-decl "list[T]" list_props nil)
    (rdc_append formula-decl nil more_list_props structures)
    (rac const-decl "T" more_list_props structures)
    (subtype_map formula-decl nil subtype_map nil)
    (n skolem-const-decl
     "below(length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                 (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                 (printA(greater_index_rec_list(pvs0`4),
                         length[mf_PVS0Expr[nat]](pvs0`4)))))"
     mf_pvs0_Recursion_Theorem nil)
    (append_assoc formula-decl nil list_props nil)
    (n skolem-const-decl
     "below(length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                 (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                 (append[mf_PVS0Expr[nat]]
                      (printA(greater_index_rec_list(pvs0`4),
                              length[mf_PVS0Expr[nat]](pvs0`4)),
                       (: cnst[nat]
                              (cons2nat[false_val, lop1, lop2]
                                   (map
                                    [(valid_index(length(firsties))), nat]
                                    (PVS02nat_limit[false_val, lop1, lop2]
                                     (length[mf_PVS0Expr[nat]](firsties)))
                                    (firsties))) :)))))"
     mf_pvs0_Recursion_Theorem nil)
    (every_forall formula-decl nil more_list_props structures)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (n skolem-const-decl
     "below(length(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                 (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                 (append[mf_PVS0Expr[nat]]
                      (printA(greater_index_rec_list(pvs0`4),
                              length[mf_PVS0Expr[nat]](pvs0`4)),
                       (: cnst[nat]
                              (cons2nat[false_val, lop1, lop2]
                                   (map
                                    [(valid_index(length(firsties))), nat]
                                    (PVS02nat_limit[false_val, lop1, lop2]
                                     (length[mf_PVS0Expr[nat]](firsties)))
                                    (firsties))) :)))))"
     mf_pvs0_Recursion_Theorem nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (subtype_length formula-decl nil subtype_length nil)
    (listnat2nat const-decl "nat" mf_pvs0_computable nil)
    (add_rec_list formula-decl nil mf_pvs0_lang nil)
    (op2 adt-constructor-decl
     "[[nat, mf_PVS0Expr, mf_PVS0Expr] -> (op2?)]" mf_PVS0Expr_adt nil)
    (op2? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (get_arg shared-adt-accessor-decl
     "[{x: mf_PVS0Expr | op1?(x) OR rec?(x)} -> mf_PVS0Expr]"
     mf_PVS0Expr_adt nil)
    (op1? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (rec adt-constructor-decl "[[nat, mf_PVS0Expr] -> (rec?)]"
     mf_PVS0Expr_adt nil)
    (get_from_list adt-accessor-decl "[(rec?) -> nat]" mf_PVS0Expr_adt
     nil)
    (rec? adt-recognizer-decl "[mf_PVS0Expr -> boolean]"
     mf_PVS0Expr_adt nil)
    (vr_subterm formula-decl nil mf_pvs0_Recursion_Theorem nil)
    (i skolem-const-decl "below[length(append[mf_PVS0Expr[nat]]
                 (printA(greater_index_rec_list(pvs0`4),
                         length[mf_PVS0Expr[nat]](pvs0`4)),
                  (: cnst[nat]
                         (cons2nat[false_val, lop1, lop2]
                              (map[(valid_index(length(firsties))), nat]
                                   (PVS02nat_limit[false_val, lop1, lop2]
                                    (length[mf_PVS0Expr[nat]](firsties)))
                                   (firsties))) :)))]"
       mf_pvs0_Recursion_Theorem nil)
    (number nonempty-type-decl nil numbers nil)
    (mf_PVS0Expr type-decl nil mf_PVS0Expr_adt nil)
    (list type-decl nil list_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (every adt-def-decl "boolean" mf_PVS0Expr_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (append def-decl "list[T]" list_props nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (lmf_PVS0Expr type-eq-decl nil mf_pvs0_expr nil)
    (PVS0 type-eq-decl nil mf_pvs0_expr nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (offset_rec def-decl "mf_PVS0Expr" mf_pvs0_lang nil)
    (length def-decl "nat" list_props nil)
    (printA const-decl "list[mf_PVS0Expr[nat]]"
     mf_pvs0_Recursion_Theorem nil)
    (greater_index_rec_list def-decl "nat" mf_pvs0_Recursion_Theorem
     nil))
   nil)
  (Recursion_Theorem-4 nil 3797681840
   ("" (skeep)
    ((""
      (name "firsties"
            "append(pvs0`4,map(offset_rec(length(pvs0`4)))(printA(greater_index_rec_list(pvs0`4),length(pvs0`4))))")
      ((""
        (inst 1
         "(lop1,lop2,false_val, append(printA(greater_index_rec_list(pvs0`4),length(pvs0`4)), (: cnst(cons2nat(map(PVS02nat_limit(length(firsties)))(firsties))) :) ))")
        (("1" (beta)
          (("1" (prop)
            (("1" (expand "partial_recursive?")
              (("1" (skeep*)
                (("1" (typepred "i")
                  (("1" (rewrite "length_append")
                    (("1" (rewrite "map_length")
                      (("1" (rewrite "length_append")
                        (("1" (rewrite "nth_append")
                          (("1" (lift-if)
                            (("1" (prop)
                              (("1"
                                (expand "printA" 1)
                                (("1"
                                  (expand "length" 1 1)
                                  (("1"
                                    (rewrite "length_append")
                                    (("1"
                                      (rewrite "length_appendn")
                                      (("1"
                                        (rewrite "map_length")
                                        (("1"
                                          (lemma
                                           "greater_index_rec_list_correctness")
                                          (("1"
                                            (expand "valid_index_rec")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "pvs0`4"
                                                   "i")
                                                  (("1"
                                                    (assert)
                                                    nil)))))))))))))))))))))
                               ("2"
                                (rewrite "map_append")
                                (("2"
                                  (rewrite "nth_append")
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (lemma "print_limited")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (inst -1 "0")
                                            (("1"
                                              (expand "limited")
                                              (("1"
                                                (inst
                                                 -1
                                                 "i-length(pvs0`4)")
                                                (("1"
                                                  (rewrite
                                                   "nth_append")
                                                  (("1"
                                                    (rewrite
                                                     "map_length")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (rewrite
                                                         "length_append")
                                                        (("1"
                                                          (lemma
                                                           "valid_index_rec_offset")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "length(pvs0`4)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_nth_rw")
                                                                  nil)))))))))))))))))
                                                 ("2"
                                                  (rewrite
                                                   "map_length")
                                                  (("2"
                                                    (rewrite
                                                     "length_append")
                                                    (("2"
                                                      (assert)
                                                      nil)))))))))))))))
                                       ("2"
                                        (rewrite "map_length")
                                        (("2"
                                          (expand "valid_index_rec")
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case
                                               "-1 *
                                                                                                                                               length(printA(greater_index_rec_list(pvs0`4),
                                                                                                                                                             length(pvs0`4)))
                                                                                                                                               - length(pvs0`4)
                                                                                                                                               + i = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1" (grind) nil)))
                                               ("2"
                                                (assert)
                                                nil)))))))))))))
                                   ("2"
                                    (rewrite "map_length")
                                    (("2"
                                      (rewrite "map_length")
                                      (("2" (assert) nil)))))))))))))
                           ("2" (rewrite "map_length")
                            (("2" (rewrite "length_append")
                              nil)))))))))))))))))
             ("2" (skeep)
              (("2" (lemma "print_correctness")
                (("2" (inst?)
                  (("2" (inst -1 "i")
                    (("2" (lemma "add_rec_list")
                      (("2"
                        (inst -1 "false_val" "nth(append
                                                                           (printA
                                                                            (greater_index_rec_list(pvs0`4),
                                                                             length(pvs0`4)),
                                                                            (: cnst
                                                                               (cons2nat
                                                                                (map
                                                                                 (PVS02nat_limit
                                                                                  (length(firsties)))
                                                                                 (firsties))) :)),
                                                                           0)"
                         "append(printA(greater_index_rec_list(pvs0`4),
                                                                     length(pvs0`4)),
                                                              (: cnst(cons2nat(map
                                                                               (PVS02nat_limit
                                                                                (length(firsties)))
                                                                               (firsties))) :))"
                         "pvs0`4" "lop1" "lop2" "i"
                         "p_recursive2nat(lop1,
                                                                            lop2,
                                                                            false_val,
                                                                            append
                                                                            (pvs0`4,
                                                                             map
                                                                             (offset_rec(length(pvs0`4)))
                                                                             (append
                                                                              (printA
                                                                               (greater_index_rec_list(pvs0`4),
                                                                                length(pvs0`4)),
                                                                               (: cnst
                                                                                  (cons2nat
                                                                                   (map
                                                                                    (PVS02nat_limit
                                                                                     (length(firsties)))
                                                                                    (firsties))) :)))))")
                        (("2" (assert)
                          (("2" (hide 2)
                            (("2" (expand "p_recursive2nat")
                              (("2"
                                (expand "listPVS0nat2nat")
                                (("2"
                                  (case
                                   "length
                                                                                                        (append
                                                                                                         (pvs0`4,
                                                                                                          map
                                                                                                          (offset_rec(length(pvs0`4)))
                                                                                                          (append
                                                                                                           (printA
                                                                                                            (greater_index_rec_list(pvs0`4),
                                                                                                             length(pvs0`4)),
                                                                                                            (: cnst
                                                                                                               (cons2nat
                                                                                                                (map
                                                                                                                 (PVS02nat_limit
                                                                                                                  (length(firsties)))
                                                                                                                 (firsties))) :)))))
                                                                                                        -
                                                                                                        1 = length(firsties)")
                                  (("1"
                                    (replaces -1)
                                    (("1"
                                      (expand "listnat2nat")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide-all-but -1)
                                            (("1" (grind) nil)))
                                           ("2"
                                            (assert)
                                            (("2"
                                              (rewrite "map_length")
                                              (("2"
                                                (rewrite
                                                 "length_append")
                                                (("2"
                                                  (lemma
                                                   "subtype_length[mf_PVS0Expr_adt
                                                                                               [naturalnumbers.nat].mf_PVS0Expr,(mf_pvs0_computable
                                                                                           [mf_pvs0_Turing_Completeness.false_val,
                                                                                            mf_pvs0_Turing_Completeness.lop1,
                                                                                            mf_pvs0_Turing_Completeness.lop2].valid_index
                                                                                           ((number_fields.-)
                                                                                                (list_props
                                                                                                 [mf_PVS0Expr_adt
                                                                                                  [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                 (list_props
                                                                                                  [mf_PVS0Expr_adt
                                                                                                   [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                  (pvs0`4,
                                                                                                   list_adt_map
                                                                                                   [mf_PVS0Expr_adt
                                                                                                    [naturalnumbers.nat].mf_PVS0Expr,
                                                                                                    mf_PVS0Expr_adt
                                                                                                    [naturalnumbers.nat].mf_PVS0Expr].map
                                                                                                   (mf_pvs0_lang
                                                                                                    [naturalnumbers.nat].offset_rec
                                                                                                    (list_props
                                                                                                     [mf_PVS0Expr_adt
                                                                                                      [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                     (pvs0`4)))
                                                                                                   (list_props
                                                                                                    [mf_PVS0Expr_adt
                                                                                                     [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                    (printA
                                                                                                     (greater_index_rec_list(pvs0`4),
                                                                                                      list_props
                                                                                                      [mf_PVS0Expr_adt
                                                                                                       [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                      (pvs0`4)),
                                                                                                     (: mf_PVS0Expr_adt
                                                                                                        [naturalnumbers.nat].cnst
                                                                                                        (cons2nat
                                                                                                         (list_adt_map
                                                                                                          [(mf_pvs0_computable
                                                                                                            [mf_pvs0_Turing_Completeness.false_val,
                                                                                                             mf_pvs0_Turing_Completeness.lop1,
                                                                                                             mf_pvs0_Turing_Completeness.lop2].valid_index
                                                                                                            (list_props
                                                                                                             [mf_PVS0Expr_adt
                                                                                                              [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                             (firsties))),
                                                                                                           naturalnumbers.nat].map
                                                                                                          (mf_pvs0_computable
                                                                                                           [mf_pvs0_Turing_Completeness.false_val,
                                                                                                            mf_pvs0_Turing_Completeness.lop1,
                                                                                                            mf_pvs0_Turing_Completeness.lop2].PVS02nat_limit
                                                                                                           (list_props
                                                                                                            [mf_PVS0Expr_adt
                                                                                                             [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                            (firsties)))
                                                                                                          (firsties))) :))))),
                                                                                                 1)))]")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "append[mf_PVS0Expr_adt
                                                                                                  [naturalnumbers.nat].mf_PVS0Expr]
                                                                                                     (pvs0`4,
                                                                                                      map
                                                                                                      (offset_rec(length(pvs0`4)))
                                                                                                      (append
                                                                                                       (printA
                                                                                                        (greater_index_rec_list
                                                                                                         (pvs0`4),
                                                                                                         length(pvs0`4)),
                                                                                                        (: cnst
                                                                                                           (cons2nat
                                                                                                            (map
                                                                                                             (PVS02nat_limit
                                                                                                              (length(firsties)))
                                                                                                             (firsties))) :))))")
                                                    (("2"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (rewrite
                                                         "length_append")
                                                        (("2"
                                                          (rewrite
                                                           "map_length")
                                                          (("2"
                                                            (rewrite
                                                             "length_append")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "printA"
                                                                 2
                                                                 3)
                                                                (("2"
                                                                  (expand
                                                                   "length"
                                                                   2
                                                                   5)
                                                                  (("2"
                                                                    (rewrite
                                                                     "length_append")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (rewrite
                                                                         "length_append")
                                                                        (("2"
                                                                          (rewrite
                                                                           "map_length")
                                                                          (("2"
                                                                            (rewrite
                                                                             "length_appendn")
                                                                            (("2"
                                                                              (expand
                                                                               "cons2nat"
                                                                               2
                                                                               3)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     -1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "map_length")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "subtype_length[mf_PVS0Expr_adt[naturalnumbers.nat].mf_PVS0Expr, (mf_pvs0_computable
                                                                                             [mf_pvs0_Turing_Completeness.false_val,
                                                                                              mf_pvs0_Turing_Completeness.lop1,
                                                                                              mf_pvs0_Turing_Completeness.lop2].valid_index
                                                                                             ((number_fields.-)
                                                                                                  (list_props
                                                                                                       [mf_PVS0Expr_adt
                                                                                                            [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                       (list_props
                                                                                                            [mf_PVS0Expr_adt
                                                                                                             [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                            (pvs0`4,
                                                                                                             list_adt_map
                                                                                                             [mf_PVS0Expr_adt
                                                                                                              [naturalnumbers.nat].mf_PVS0Expr,
                                                                                                              mf_PVS0Expr_adt
                                                                                                              [naturalnumbers.nat].mf_PVS0Expr].map
                                                                                                             (mf_pvs0_lang
                                                                                                              [naturalnumbers.nat].offset_rec
                                                                                                              (list_props
                                                                                                               [mf_PVS0Expr_adt
                                                                                                                [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                               (pvs0`4)))
                                                                                                             (list_props
                                                                                                              [mf_PVS0Expr_adt
                                                                                                               [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                              (printA
                                                                                                               (greater_index_rec_list(pvs0`4),
                                                                                                                list_props
                                                                                                                [mf_PVS0Expr_adt
                                                                                                                 [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                (pvs0`4)),
                                                                                                               (: mf_PVS0Expr_adt
                                                                                                                  [naturalnumbers.nat].cnst
                                                                                                                  (cons2nat
                                                                                                                   (list_adt_map
                                                                                                                    [(mf_pvs0_computable
                                                                                                                      [mf_pvs0_Turing_Completeness.false_val,
                                                                                                                       mf_pvs0_Turing_Completeness.lop1,
                                                                                                                       mf_pvs0_Turing_Completeness.lop2].valid_index
                                                                                                                      (list_props
                                                                                                                       [mf_PVS0Expr_adt
                                                                                                                        [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                       (firsties))),
                                                                                                                     naturalnumbers.nat].map
                                                                                                                    (mf_pvs0_computable
                                                                                                                     [mf_pvs0_Turing_Completeness.false_val,
                                                                                                                      mf_pvs0_Turing_Completeness.lop1,
                                                                                                                      mf_pvs0_Turing_Completeness.lop2].PVS02nat_limit
                                                                                                                     (list_props
                                                                                                                      [mf_PVS0Expr_adt
                                                                                                                       [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                      (firsties)))
                                                                                                                    (firsties))) :))))),
                                                                                                   1)))]")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "append[mf_PVS0Expr_adt[naturalnumbers.nat].mf_PVS0Expr](pvs0`4,
                                                                                            map(offset_rec(length(pvs0`4)))
                                                                                               (append(printA(greater_index_rec_list(pvs0`4),
                                                                                                              length(pvs0`4)),
                                                                                                       (: cnst(cons2nat
                                                                                                               (map
                                                                                                                (PVS02nat_limit(length(firsties)))
                                                                                                                (firsties))) :))))")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "length_append")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "map_length")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "length_append")
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil)))))))))))))))))
                                                                                   ("2"
                                                                                    (case
                                                                                     "append
                                                                                                                                                     (pvs0`4,
                                                                                                                                                      map
                                                                                                                                                      (offset_rec(length(pvs0`4)))
                                                                                                                                                      (append
                                                                                                                                                       (printA
                                                                                                                                                        (greater_index_rec_list
                                                                                                                                                         (pvs0`4),
                                                                                                                                                         length(pvs0`4)),
                                                                                                                                                        (: cnst
                                                                                                                                                           (cons2nat
                                                                                                                                                            (map
                                                                                                                                                             (PVS02nat_limit
                                                                                                                                                              (length(firsties)))
                                                                                                                                                             (firsties))) :)))) = append[(valid_index(length(firsties)))]
                                                                                                                                                     (pvs0`4,
                                                                                                                                                      map
                                                                                                                                                      (offset_rec(length(pvs0`4)))
                                                                                                                                                      (append
                                                                                                                                                       (printA
                                                                                                                                                        (greater_index_rec_list
                                                                                                                                                         (pvs0`4),
                                                                                                                                                         length(pvs0`4)),
                                                                                                                                                        (: cnst
                                                                                                                                                           (cons2nat
                                                                                                                                                            (map
                                                                                                                                                             (PVS02nat_limit
                                                                                                                                                              (length(firsties)))
                                                                                                                                                             (firsties))) :))))")
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "map_append")
                                                                                        (("1"
                                                                                          (case
                                                                                           "append
                                                                                                                                                                 (map
                                                                                                                                                                  (offset_rec(length(pvs0`4)))
                                                                                                                                                                  (printA
                                                                                                                                                                   (greater_index_rec_list
                                                                                                                                                                    (pvs0`4),
                                                                                                                                                                    length(pvs0`4))),
                                                                                                                                                                  map
                                                                                                                                                                  (offset_rec(length(pvs0`4)))
                                                                                                                                                                  ((: cnst
                                                                                                                                                                      (cons2nat
                                                                                                                                                                       (map
                                                                                                                                                                        (PVS02nat_limit
                                                                                                                                                                         (length(firsties)))
                                                                                                                                                                        (firsties))) :))) = append[(valid_index
                                                                                                                                                                  (length(firsties)))]
                                                                                                                                                                 (map
                                                                                                                                                                  (offset_rec(length(pvs0`4)))
                                                                                                                                                                  (printA
                                                                                                                                                                   (greater_index_rec_list
                                                                                                                                                                    (pvs0`4),
                                                                                                                                                                    length(pvs0`4))),
                                                                                                                                                                  map
                                                                                                                                                                  (offset_rec(length(pvs0`4)))
                                                                                                                                                                  ((: cnst
                                                                                                                                                                      (cons2nat
                                                                                                                                                                       (map
                                                                                                                                                                        (PVS02nat_limit
                                                                                                                                                                         (length(firsties)))
                                                                                                                                                                        (firsties))) :)))")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "append_assoc[(valid_index
                                                                                                                                                (length(firsties)))]")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "pvs0`4"
                                                                                                 "map
                                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                                (printA
                                                                                                                                                 (greater_index_rec_list
                                                                                                                                                  (pvs0`4),
                                                                                                                                                  length(pvs0`4)))"
                                                                                                 "map
                                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                                ((: cnst
                                                                                                                                                    (cons2nat
                                                                                                                                                     (map
                                                                                                                                                      (PVS02nat_limit
                                                                                                                                                       (length(firsties)))
                                                                                                                                                      (firsties))) :))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     (-1
                                                                                                      -2))
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "subtype_map[(valid_index(length(firsties))),nat, (mf_pvs0_computable
                                                                                                                                         [mf_pvs0_Turing_Completeness.false_val,
                                                                                                                                          mf_pvs0_Turing_Completeness.lop1,
                                                                                                                                          mf_pvs0_Turing_Completeness.lop2].valid_index
                                                                                                                                         ((number_fields.-)
                                                                                                                                          (list_props
                                                                                                                                           [mf_PVS0Expr_adt
                                                                                                                                            [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                           (list_props
                                                                                                                                            [mf_PVS0Expr_adt
                                                                                                                                             [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                                            (pvs0`4,
                                                                                                                                             list_adt_map
                                                                                                                                             [mf_PVS0Expr_adt
                                                                                                                                              [naturalnumbers.nat].mf_PVS0Expr,
                                                                                                                                              mf_PVS0Expr_adt
                                                                                                                                              [naturalnumbers.nat].mf_PVS0Expr].map
                                                                                                                                             (mf_pvs0_lang
                                                                                                                                              [naturalnumbers.nat].offset_rec
                                                                                                                                              (list_props
                                                                                                                                               [mf_PVS0Expr_adt
                                                                                                                                                [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                               (pvs0`4)))
                                                                                                                                             (list_props
                                                                                                                                              [mf_PVS0Expr_adt
                                                                                                                                               [naturalnumbers.nat].mf_PVS0Expr].append
                                                                                                                                              (printA
                                                                                                                                               (greater_index_rec_list
                                                                                                                                                (pvs0`4),
                                                                                                                                                list_props
                                                                                                                                                [mf_PVS0Expr_adt
                                                                                                                                                 [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                (pvs0`4)),
                                                                                                                                               (: mf_PVS0Expr_adt
                                                                                                                                                  [naturalnumbers.nat].cnst
                                                                                                                                                  (cons2nat
                                                                                                                                                   (list_adt_map
                                                                                                                                                    [(mf_pvs0_computable
                                                                                                                                                      [mf_pvs0_Turing_Completeness.false_val,
                                                                                                                                                       mf_pvs0_Turing_Completeness.lop1,
                                                                                                                                                       mf_pvs0_Turing_Completeness.lop2].valid_index
                                                                                                                                                      (list_props
                                                                                                                                                       [mf_PVS0Expr_adt
                                                                                                                                                        [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                       (firsties))),
                                                                                                                                                     naturalnumbers.nat].map
                                                                                                                                                    (mf_pvs0_computable
                                                                                                                                                     [mf_pvs0_Turing_Completeness.false_val,
                                                                                                                                                      mf_pvs0_Turing_Completeness.lop1,
                                                                                                                                                      mf_pvs0_Turing_Completeness.lop2].PVS02nat_limit
                                                                                                                                                     (list_props
                                                                                                                                                      [mf_PVS0Expr_adt
                                                                                                                                                       [naturalnumbers.nat].mf_PVS0Expr].length
                                                                                                                                                      (firsties)))
                                                                                                                                                    (firsties))) :))))),
                                                                                                                                           1))), nat]")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "append[(valid_index(length(firsties)))]
                                                                                                                                                          (append[(valid_index(length(firsties)))]
                                                                                                                                                           (pvs0`4,
                                                                                                                                                            map
                                                                                                                                                            (offset_rec(length(pvs0`4)))
                                                                                                                                                            (printA
                                                                                                                                                             (greater_index_rec_list
                                                                                                                                                              (pvs0`4),
                                                                                                                                                              length(pvs0`4)))),
                                                                                                                                                           map
                                                                                                                                                           (offset_rec(length(pvs0`4)))
                                                                                                                                                           ((: cnst
                                                                                                                                                               (cons2nat
                                                                                                                                                                (map
                                                                                                                                                                 (PVS02nat_limit
                                                                                                                                                                  (length(firsties)))
                                                                                                                                                                 (firsties))) :)))"
                                                                                                         "PVS02nat_limit
                                                                                                                                                           (length(firsties))"
                                                                                                         "PVS02nat_limit
                                                                                                                                                           (length(firsties))")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "map_append[(valid_index(length(firsties))),nat]")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "append
                                                                                                                                                                        [(valid_index
                                                                                                                                                                          (length(firsties)))]
                                                                                                                                                                        (pvs0`4,
                                                                                                                                                                         map
                                                                                                                                                                         (offset_rec
                                                                                                                                                                          (length(pvs0`4)))
                                                                                                                                                                         (printA
                                                                                                                                                                          (greater_index_rec_list
                                                                                                                                                                           (pvs0`4),
                                                                                                                                                                           length(pvs0`4))))"
                                                                                                               "map
                                                                                                                                                                        (offset_rec(length(pvs0`4)))
                                                                                                                                                                        ((: cnst
                                                                                                                                                                            (cons2nat
                                                                                                                                                                             (map
                                                                                                                                                                              (PVS02nat_limit
                                                                                                                                                                               (length(firsties)))
                                                                                                                                                                              (firsties))) :))"
                                                                                                               "PVS02nat_limit
                                                                                                                                                                      (length(firsties))")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "rac_append")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "rac
                                                                                                                                                                                                              (map
                                                                                                                                                                                                               (PVS02nat_limit
                                                                                                                                                                                                                (length(firsties)))
                                                                                                                                                                                                               (map
                                                                                                                                                                                                                (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                ((: cnst
                                                                                                                                                                                                                    (cons2nat
                                                                                                                                                                                                                     (map
                                                                                                                                                                                                                      (PVS02nat_limit
                                                                                                                                                                                                                       (length(firsties)))
                                                                                                                                                                                                                      (firsties))) :)))) = 1
                                                                                                                                                                                                         +
                                                                                                                                                                                                         5
                                                                                                                                                                                                         *
                                                                                                                                                                                                         cons2nat
                                                                                                                                                                                                         (map
                                                                                                                                                                                                          (PVS02nat_limit(length(firsties)))
                                                                                                                                                                                                          (firsties))")
                                                                                                                      (("1"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "rdc_append")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "rdc
                                                                                                                                                                                                                                        (map
                                                                                                                                                                                                                                         (PVS02nat_limit
                                                                                                                                                                                                                                          (length(firsties)))
                                                                                                                                                                                                                                         (map
                                                                                                                                                                                                                                          (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                                          ((: cnst
                                                                                                                                                                                                                                              (cons2nat
                                                                                                                                                                                                                                               (map
                                                                                                                                                                                                                                                (PVS02nat_limit
                                                                                                                                                                                                                                                 (length(firsties)))
                                                                                                                                                                                                                                                (firsties))) :)))) = null")
                                                                                                                            (("1"
                                                                                                                              (replaces
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "append_null")
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "append
                                                                                                                                                                                                                                                    [(valid_index
                                                                                                                                                                                                                                                      (length(firsties)))]
                                                                                                                                                                                                                                                    (pvs0`4,
                                                                                                                                                                                                                                                     map
                                                                                                                                                                                                                                                     (offset_rec(length(pvs0`4)))
                                                                                                                                                                                                                                                     (printA
                                                                                                                                                                                                                                                      (greater_index_rec_list
                                                                                                                                                                                                                                                       (pvs0`4),
                                                                                                                                                                                                                                                       length(pvs0`4)))) = firsties")
                                                                                                                                  (("1"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-2
                                                                                                                                          2))
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "semantic_rel")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil)))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-3
                                                                                                                                      1))
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "subtype_append[mf_PVS0Expr[nat],(valid_index(length(firsties)))]")
                                                                                                                                      (("2"
                                                                                                                                        (inst?)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil)))))))))))))
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil)))))
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil)))))))
                                                                                                                       ("2"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "map"
                                                                                                                           1
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "map"
                                                                                                                             1
                                                                                                                             3)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "map"
                                                                                                                               1
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "map"
                                                                                                                                 1
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil)))))))))))))
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (grind)
                                                                                                                        nil)))))))))))
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "vr ")
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil)))))))))))
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "x")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "valid_index")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "valid_index_rec")
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "length_append")
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "map_length")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "length_append")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "firsties")
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "length_append")
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "map_length")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "subtype_append[mf_PVS0Expr[nat], (valid_index(length(firsties)))]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                nil)))))
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("3"
                                                                                              (grind)
                                                                                              nil)))
                                                                                           ("4"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("4"
                                                                                              (rewrite
                                                                                               "subtype_every")
                                                                                              (("4"
                                                                                                (rewrite
                                                                                                 "every_forall")
                                                                                                (("4"
                                                                                                  (skeep)
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "restrict")
                                                                                                    (("4"
                                                                                                      (typepred
                                                                                                       "map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                                                                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                                                                   (printA(greater_index_rec_list(pvs0`4),
                                                                           length[mf_PVS0Expr[nat]](pvs0`4)))")
                                                                                                      (("4"
                                                                                                        (assert)
                                                                                                        (("4"
                                                                                                          (typepred
                                                                                                           "nth(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                                                                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                                                                   (printA(greater_index_rec_list(pvs0`4),
                                                                           length[mf_PVS0Expr[nat]](pvs0`4))),
                                                               n)")
                                                                                                          (("4"
                                                                                                            (assert)
                                                                                                            (("4"
                                                                                                              (hide
                                                                                                               -)
                                                                                                              (("4"
                                                                                                                (expand
                                                                                                                 "valid_index")
                                                                                                                (("4"
                                                                                                                  (lemma
                                                                                                                   "print_limited")
                                                                                                                  (("4"
                                                                                                                    (inst?)
                                                                                                                    (("4"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "0")
                                                                                                                      (("4"
                                                                                                                        (expand
                                                                                                                         "limited")
                                                                                                                        (("4"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "n")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "nth_append")
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "n")
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "map_length")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "length_append")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "valid_index_rec_offset")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "length[mf_PVS0Expr[nat]](pvs0`4)")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "firsties")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "length_append")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "map_length")
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "map_nth_rw")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil)))))))))))))))))))))))))))
                                                                                                                             ("2"
                                                                                                                              (typepred
                                                                                                                               "n")
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "map_length")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))
                                                                                                                           ("2"
                                                                                                                            (rewrite
                                                                                                                             "length_append")
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "n")
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "map_length")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "subtype_append[mf_PVS0Expr[nat],(valid_index(length(firsties)))]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          nil)))))
                                                                                     ("3"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("3"
                                                                                        (rewrite
                                                                                         "every_forall")
                                                                                        (("3"
                                                                                          (skeep)
                                                                                          (("3"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "nth(map[mf_PVS0Expr[nat], mf_PVS0Expr[nat]]
                                                                   (offset_rec[nat](length[mf_PVS0Expr[nat]](pvs0`4)))
                                                                   (append[mf_PVS0Expr[nat]]
                                                                        (printA(greater_index_rec_list(pvs0`4),
                                                                                length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                         (: cnst[nat]
                                                                                (cons2nat(map
                                                                                          [(valid_index(length(firsties))),
                                                                                           nat]
                                                                                          (PVS02nat_limit
                                                                                           [false_val, lop1, lop2]
                                                                                           (length[mf_PVS0Expr[nat]]
                                                                                            (firsties)))
                                                                                          (firsties))) :))),
                                                               n)")
                                                                                              (("1"
                                                                                                (name-replace
                                                                                                 "list_pvs0expr"
                                                                                                 "append[mf_PVS0Expr[nat]]
                                                                              (printA(greater_index_rec_list(pvs0`4),
                                                                                      length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                               (: cnst[nat]
                                                                                      (cons2nat(map
                                                                                                [(valid_index(length(firsties))),
                                                                                                 nat]
                                                                                                (PVS02nat_limit
                                                                                                 [false_val, lop1, lop2]
                                                                                                 (length[mf_PVS0Expr[nat]]
                                                                                                  (firsties)))
                                                                                                (firsties))) :))")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "subtype_nth[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil)))))))
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "n")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil)))))))))
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "print_limited")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "limited")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "n")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "valid_index")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "length_append")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "firsties"
                                                                                                           1
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "length_append")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "map_length")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "cons(cnst
                                                                                                           (cons2nat
                                                                                                            (map
                                                                                                             [(valid_index(length(firsties))),
                                                                                                              nat]
                                                                                                             (PVS02nat_limit
                                                                                                              [false_val, lop1, lop2]
                                                                                                              (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                             (firsties))),
                                                                                                           null) = (: cnst[nat]
                                                                                                            (cons2nat
                                                                                                             (map
                                                                                                              [(valid_index(length(firsties))),
                                                                                                               nat]
                                                                                                              (PVS02nat_limit
                                                                                                               [false_val, lop1, lop2]
                                                                                                               (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                              (firsties))) :)")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (name-replace
                                                                                                                     "lo"
                                                                                                                     "append[mf_PVS0Expr[nat]]
                                                                                               (printA
                                                                                                (greater_index_rec_list(pvs0`4),
                                                                                                 length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                                                (: cnst[nat]
                                                                                                   (cons2nat
                                                                                                    (map
                                                                                                     [(valid_index(length(firsties))),
                                                                                                      nat]
                                                                                                     (PVS02nat_limit
                                                                                                      [false_val, lop1, lop2]
                                                                                                      (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                     (firsties))) :))")
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "valid_index_rec_offset")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "map_nth_rw"
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "subtype_nth[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))
                                                                                                                 ("2"
                                                                                                                  (propax)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "n")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "cons[mf_PVS0Expr[nat]]
                                                                                          (cnst[nat]
                                                                                               (cons2nat(map
                                                                                                         [(valid_index[false_val, lop1, lop2]
                                                                                                           (length[mf_PVS0Expr[nat]](firsties))),
                                                                                                          nat]
                                                                                                         (PVS02nat_limit[false_val, lop1, lop2]
                                                                                                          (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                         (firsties))),
                                                                                           null[mf_PVS0Expr[nat]]) = (: cnst[nat]
                                                                                                    (cons2nat(map
                                                                                                              [(valid_index(length(firsties))),
                                                                                                               nat]
                                                                                                              (PVS02nat_limit
                                                                                                               [false_val, lop1, lop2]
                                                                                                               (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                              (firsties))) :)")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "lo"
                                                                                                               "append[mf_PVS0Expr[nat]]
                                                                            (printA(greater_index_rec_list(pvs0`4),
                                                                                    length[mf_PVS0Expr[nat]](pvs0`4)),
                                                                             (: cnst[nat]
                                                                                    (cons2nat(map[(valid_index(length(firsties))), nat]
                                                                                                  (PVS02nat_limit[false_val, lop1, lop2]
                                                                                                   (length[mf_PVS0Expr[nat]](firsties)))
                                                                                                  (firsties))) :))")
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    nil)))))))))
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil)))))))))))))))))))))))
                                                                                     ("4"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("4"
                                                                                        (rewrite
                                                                                         "every_forall")
                                                                                        (("4"
                                                                                          (skeep)
                                                                                          (("4"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "nth(pvs0`4, n)")
                                                                                              (("1"
                                                                                                (use
                                                                                                 "subtype_nth[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil)))
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "n")
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))
                                                                                             ("2"
                                                                                              (expand
                                                                                               "valid_index")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "firsties")
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "length_append")
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "map_length")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "printA")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "length"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "length_append")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "length_appendn")
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "map_length")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "greater_index_rec_list_correctness")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "valid_index_rec")
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "n")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (use
                                                                                                                               "subtype_nth[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil)))))
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "n")
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (expand "firsties" 1 3)
                                      (("2"
                                        (rewrite "length_append")
                                        (("2"
                                          (rewrite "length_append")
                                          (("2"
                                            (rewrite "map_length")
                                            (("2"
                                              (rewrite "map_length")
                                              (("2"
                                                (rewrite
                                                 "length_append")
                                                (("2"
                                                  (assert)
                                                  nil)))))))))))))))))))))))))))))))))))))))))
         ("2" (hide -1)
          (("2" (expand "partial_recursive?")
            (("2" (skeep)
              (("2" (rewrite "nth_append")
                (("1" (lift-if)
                  (("1" (prop)
                    (("1" (expand "printA" 1 1)
                      (("1" (expand "nth" 1 1)
                        (("1" (lift-if)
                          (("1" (prop)
                            (("1" (rewrite "length_append")
                              (("1"
                                (expand "valid_index_rec")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (expand "subterm")
                                    (("1"
                                      (expand "subterm")
                                      (("1"
                                        (expand "subterm")
                                        (("1"
                                          (expand "subterm")
                                          (("1"
                                            (expand "subterm")
                                            (("1"
                                              (expand "subterm")
                                              (("1"
                                                (expand "subterm")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (decompose-equality)
                                                    (("1"
                                                      (expand
                                                       "printA"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "length"
                                                         1
                                                         1)
                                                        (("1"
                                                          (rewrite
                                                           "length_append")
                                                          (("1"
                                                            (rewrite
                                                             "map_length")
                                                            (("1"
                                                              (rewrite
                                                               "length_appendn")
                                                              (("1"
                                                                (assert)
                                                                nil)))))))))))))
                                                   ("2"
                                                    (decompose-equality)
                                                    (("2"
                                                      (grind)
                                                      nil)))
                                                   ("3"
                                                    (decompose-equality)
                                                    (("3"
                                                      (expand
                                                       "printA"
                                                       1)
                                                      (("3"
                                                        (expand
                                                         "length"
                                                         1
                                                         1)
                                                        (("3"
                                                          (rewrite
                                                           "length_append")
                                                          (("3"
                                                            (rewrite
                                                             "map_length")
                                                            (("3"
                                                              (rewrite
                                                               "length_appendn")
                                                              (("3"
                                                                (assert)
                                                                nil)))))))))))))))))))))))))))))))))))
                             ("2" (rewrite "nth_append")
                              (("1"
                                (lift-if)
                                (("1"
                                  (prop)
                                  (("1"
                                    (typepred "mult")
                                    (("1"
                                      (expand "partial_recursive?")
                                      (("1"
                                        (prop)
                                        (("1"
                                          (inst -4 "i-1")
                                          (("1"
                                            (use
                                             "valid_index_rec_offset")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (rewrite
                                                 "length_append")
                                                (("1"
                                                  (expand "printA" 1)
                                                  (("1"
                                                    (expand
                                                     "length"
                                                     1
                                                     1)
                                                    (("1"
                                                      (rewrite
                                                       "length_append")
                                                      (("1"
                                                        (rewrite
                                                         "map_length")
                                                        (("1"
                                                          (rewrite
                                                           "length_appendn")
                                                          (("1"
                                                            (rewrite
                                                             "map_nth_rw")
                                                            (("1"
                                                              (expand
                                                               "valid_index_rec")
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))))))))))))))))))))
                                             ("2" (assert) nil)))
                                           ("2"
                                            (rewrite "map_length")
                                            (("2"
                                              (assert)
                                              nil)))))))))))
                                   ("2"
                                    (expand "valid_index_rec")
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (lemma "vr_subterm")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            nil)))))))))))))
                               ("2"
                                (expand "printA" -1)
                                (("2"
                                  (expand "length" -1 1)
                                  (("2"
                                    (rewrite "length_append")
                                    (("2"
                                      (rewrite "length_append")
                                      (("2"
                                        (assert)
                                        nil)))))))))))))))))))
                     ("2"
                      (case "i -
                                                                      length(printA(greater_index_rec_list(pvs0`4),
                                                                                    length[mf_PVS0Expr[nat]](pvs0`4))) = 0")
                      (("1" (replaces -1) (("1" (grind) nil)))
                       ("2" (hide 3)
                        (("2" (typepred "i")
                          (("2" (rewrite "length_append")
                            (("2" (assert) nil)))))))))))))
                 ("2" (typepred "i")
                  (("2" (rewrite "length_append") nil)))))))))))
         ("3" (grind) nil) ("4" (grind) nil)
         ("5" (expand "firsties" 1 2)
          (("5" (rewrite "every_forall")
            (("5" (skeep)
              (("5" (prop)
                (("1"
                  (typepred "nth(append(pvs0`4,
                                        map(offset_rec(length(pvs0`4)))
                                           (printA(greater_index_rec_list(pvs0`4),
                                                   length(pvs0`4)))),
                                 n)")
                  (("1" (assert)
                    (("1"
                      (use "subtype_nth[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                      (("1" (assert) nil)))))
                   ("2" (typepred "n")
                    (("2"
                      (use "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                      (("2" (assert) nil)))))))
                 ("2"
                  (use "subtype_nth[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                  (("1" (replaces -1)
                    (("1" (rewrite "nth_append")
                      (("1" (lift-if)
                        (("1" (prop)
                          (("1" (hide -2)
                            (("1" (expand "firsties")
                              (("1"
                                (rewrite "length_append")
                                (("1"
                                  (rewrite "map_length")
                                  (("1"
                                    (expand "printA")
                                    (("1"
                                      (expand "length" 1 1)
                                      (("1"
                                        (rewrite "length_append")
                                        (("1"
                                          (rewrite "length_appendn")
                                          (("1"
                                            (lemma
                                             "greater_index_rec_list_correctness")
                                            (("1"
                                              (expand "valid_index")
                                              (("1"
                                                (expand
                                                 "valid_index_rec")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      nil)))))))))))))))))))))))))))
                           ("2" (lemma "print_limited")
                            (("2" (inst?)
                              (("2"
                                (hide -2)
                                (("2"
                                  (expand "firsties")
                                  (("2"
                                    (inst -1 "0")
                                    (("2"
                                      (expand "limited")
                                      (("2"
                                        (inst -1 "n - length(pvs0`4)")
                                        (("1"
                                          (rewrite "length_append")
                                          (("1"
                                            (expand "valid_index")
                                            (("1"
                                              (rewrite "length_append")
                                              (("1"
                                                (rewrite "nth_append")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (lemma
                                                       "valid_index_rec_offset")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "nth(printA(greater_index_rec_list(pvs0`4),
                                                                                           length(pvs0`4)),n-length(pvs0`4))"
                                                         " 1 +
                                                                             length(printA(greater_index_rec_list(pvs0`4),
                                                                                           length(pvs0`4)))"
                                                         "length(pvs0`4)")
                                                        (("1"
                                                          (rewrite
                                                           "map_nth_rw")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide-all-but
                                                                 (-1
                                                                  2))
                                                                (("1"
                                                                  (name-replace
                                                                   "expr"
                                                                   "offset_rec(length(pvs0`4))
                                                                                            (nth(printA
                                                                                                 (greater_index_rec_list(pvs0`4),
                                                                                                  length(pvs0`4)),
                                                                                                 n - length(pvs0`4)))")
                                                                  (("1"
                                                                    (rewrite
                                                                     "map_length")
                                                                    nil)))))))))))
                                                         ("2"
                                                          (assert)
                                                          nil)))))
                                                     ("2"
                                                      (hide -1 3)
                                                      (("2"
                                                        (typepred "n")
                                                        (("2"
                                                          (use
                                                           "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                          (("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (rewrite
                                                               "length_append")
                                                              (("2"
                                                                (rewrite
                                                                 "map_length")
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))
                                                 ("2"
                                                  (hide -1 3)
                                                  (("2"
                                                    (typepred "n")
                                                    (("2"
                                                      (use
                                                       "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (rewrite
                                                           "length_append")
                                                          (("2"
                                                            (rewrite
                                                             "map_length")
                                                            (("2"
                                                              (assert)
                                                              nil)))))))))))))))))))))
                                         ("2"
                                          (hide 3)
                                          (("2"
                                            (typepred "n")
                                            (("2"
                                              (use
                                               "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                                              (("2"
                                                (replaces -1)
                                                (("2"
                                                  (rewrite
                                                   "length_append")
                                                  (("2"
                                                    (rewrite
                                                     "length_append")
                                                    (("2"
                                                      (rewrite
                                                       "map_length")
                                                      (("2"
                                                        (assert)
                                                        nil)))))))))))))))))))))))))))))))))
                       ("2" (hide -1 2)
                        (("2" (typepred "n")
                          (("2"
                            (use "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                            (("2" (replaces -1)
                              (("2"
                                (rewrite "length_append")
                                nil)))))))))))))
                   ("2" (hide -1 2)
                    (("2" (typepred "n")
                      (("2"
                        (use "subtype_length[mf_PVS0Expr[number],mf_PVS0Expr[nat]]")
                        (("2" (replaces -1) nil))))))))))))))))))))))
    nil)
   nil nil)
  (Recursion_Theorem-3 nil 3797613609
   ("" (skeep)
    ((""
      (name "firsties"
            "append(pvs0`4,map(offset_rec(length(pvs0`4)))(printA(greater_index_rec_list(pvs0`4),length(pvs0`4))))")
      ((""
        (inst 1
         "(lop1,lop2,false_val, append(printA(greater_index_rec_list(pvs0`4),length(pvs0`4)), (: cnst(cons2nat(map(PVS02nat_limit(length(firsties)))(firsties))) :) ))")
        (("1" (beta)
          (("1" (prop)
            (("1" (expand "partial_recursive?")
              (("1" (skeep*)
                (("1" (typepred "i")
                  (("1" (rewrite "length_append")
                    (("1" (rewrite "map_length")
                      (("1" (rewrite "length_append")
                        (("1" (rewrite "nth_append")
                          (("1" (lift-if)
                            (("1" (prop)
                              (("1"
                                (expand "printA" 1)
                                (("1"
                                  (expand "length" 1 1)
                                  (("1"
                                    (rewrite "length_append")
                                    (("1"
                                      (rewrite "length_appendn")
                                      (("1"
                                        (rewrite "map_length")
                                        (("1"
                                          (lemma
                                           "greater_index_rec_list_correctness")
                                          (("1"
                                            (expand "valid_index_rec")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "pvs0`4"
                                                   "i")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma "print_limited")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (expand "limited")
                                    (("2"
                                      (inst -1 "i-length(pvs0`4)")
                                      (("1"
                                        (rewrite "nth_append")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (rewrite "length_append")
                                            (("1"
                                              (lemma
                                               "valid_index_rec_offset")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "length(pvs0`4)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "map_nth_rw")
                                                      (("1"
                                                        (postpone)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (postpone)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (postpone) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (postpone) nil nil))
            nil))
          nil)
         ("2" (postpone) nil nil) ("3" (postpone) nil nil)
         ("4" (postpone) nil nil) ("5" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil nil)
  (Recursion_Theorem-2 nil 3797612051
   ("" (skeep)
    ((""
      (name "firsties"
            "append(pvs0`4,map(offset_rec(length(pvs0`4)))(printA(greater_index_rec_list(pvs0`4),length(pvs0`4))))")
      ((""
        (inst 1
         "(lop1,lop2,false_val, append(printA(greater_index_rec_list(pvs0`4),length(pvs0`4)), (: cnst(cons2nat(map(PVS02nat_limit(length(firsties)))(firsties))) :) ))")
        (("1" (beta)
          (("1" (prop)
            (("1" (expand "partial_recursive?")
              (("1" (skeep*)
                (("1" (typepred "i")
                  (("1" (rewrite "length_append")
                    (("1" (rewrite "map_length")
                      (("1" (rewrite "length_append")
                        (("1" (rewrite "nth_append")
                          (("1" (lift-if)
                            (("1" (prop)
                              (("1"
                                (expand "printA" 1)
                                (("1"
                                  (expand "length" 1 1)
                                  (("1"
                                    (rewrite "length_append")
                                    (("1"
                                      (rewrite "length_appendn")
                                      (("1"
                                        (rewrite "map_length")
                                        (("1"
                                          (lemma
                                           "greater_index_rec_list_correctness")
                                          (("1"
                                            (expand "valid_index_rec")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "pvs0`4"
                                                   "i")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma "print_limited")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (expand "limited")
                                    (("2"
                                      (inst -1 "i-length(pvs0`4)")
                                      (("1"
                                        (rewrite "nth_append")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (rewrite "length_append")
                                            (("1"
                                              (lemma
                                               "valid_index_rec_offset")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "length(pvs0`4)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "map_nth_rw")
                                                      (("1"
                                                        (postpone)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (postpone)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (rewrite "length_append")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (rewrite "map_length")
                            (("2" (rewrite "length_append") nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (lemma "print_correctness")
                (("2" (inst?)
                  (("2" (inst -1 "i")
                    (("2" (lemma "add_rec_list")
                      (("2"
                        (inst -1 "false_val" "nth(append
                                                                           (printA
                                                                            (greater_index_rec_list(pvs0`4),
                                                                             length(pvs0`4)),
                                                                            (: cnst
                                                                               (cons2nat
                                                                                (map
                                                                                 (PVS02nat_limit
                                                                                  (length(firsties)))
                                                                                 (firsties))) :)),
                                                                           0)"
                         "append(printA(greater_index_rec_list(pvs0`4),
                                                                     length(pvs0`4)),
                                                              (: cnst(cons2nat(map
                                                                               (PVS02nat_limit
                                                                                (length(firsties)))
                                                                               (firsties))) :))"
                         "pvs0`4" "lop1" "lop2" "i"
                         "p_recursive2nat(lop1,
                                                                            lop2,
                                                                            false_val,
                                                                            append
                                                                            (pvs0`4,
                                                                             map
                                                                             (offset_rec(length(pvs0`4)))
                                                                             (append
                                                                              (printA
                                                                               (greater_index_rec_list(pvs0`4),
                                                                                length(pvs0`4)),
                                                                               (: cnst
                                                                                  (cons2nat
                                                                                   (map
                                                                                    (PVS02nat_limit
                                                                                     (length(firsties)))
                                                                                    (firsties))) :)))))")
                        (("2" (assert)
                          (("2" (hide 2)
                            (("2" (expand "p_recursive2nat")
                              (("2"
                                (expand "listPVS0nat2nat")
                                (("2"
                                  (case
                                   "length
                                                                                                        (append
                                                                                                         (pvs0`4,
                                                                                                          map
                                                                                                          (offset_rec(length(pvs0`4)))
                                                                                                          (append
                                                                                                           (printA
                                                                                                            (greater_index_rec_list(pvs0`4),
                                                                                                             length(pvs0`4)),
                                                                                                            (: cnst
                                                                                                               (cons2nat
                                                                                                                (map
                                                                                                                 (PVS02nat_limit
                                                                                                                  (length(firsties)))
                                                                                                                 (firsties))) :)))))
                                                                                                        -
                                                                                                        1 = length(firsties)")
                                  (("1"
                                    (replaces -1)
                                    (("1"
                                      (expand "listnat2nat")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide-all-but -1)
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (rewrite "map_length")
                                              (("2"
                                                (rewrite
                                                 "length_append")
                                                (("2"
                                                  (postpone)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (postpone) nil nil) ("3" (postpone) nil nil)
         ("4" (postpone) nil nil) ("5" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil nil)
  (Recursion_Theorem-1 nil 3797611398 ("" (postpone) nil nil) nil
   shostak)))

